var s=Object.assign;import{r as a,o as n,c as t,a as l,F as e,g as p,f as c,h as o,t as r,i as d,j as h,b as g}from"./index.91822329.js";const i={},u={class:"block"},j=l("span",{class:"demonstration"},"页数较少时的效果",-1),v={class:"block"},m=l("span",{class:"demonstration"},"大于 7 页时的效果",-1);i.render=function(s,p){const c=a("rol-pagination");return n(),t(e,null,[l("div",u,[j,l(c,{layout:"prev, pager, next",total:50})]),l("div",v,[m,l(c,{layout:"prev, pager, next",total:1e3})])],64)};const _={};_.render=function(s,l){const e=a("rol-pagination");return n(),t(e,{"page-size":20,"pager-count":11,layout:"prev, pager, next",total:1e3})};const q={};q.render=function(s,l){const e=a("rol-pagination");return n(),t(e,{background:"",layout:"prev, pager, next",total:1e3})};const C={};C.render=function(s,l){const e=a("rol-pagination");return n(),t(e,{small:"",layout:"prev, pager, next",total:50})};const f={setup:()=>({currentPage1:p(5),currentPage2:p(5),currentPage3:p(5),currentPage4:p(5),handleSizeChange:s=>{console.log(`每页 ${s} 条`)},handleCurrentChange:s=>{console.log(`当前页: ${s}`)}})},y={class:"block"},b=l("span",{class:"demonstration"},"显示总数",-1),k={class:"block"},z=l("span",{class:"demonstration"},"调整每页显示条数",-1),x={class:"block"},w=l("span",{class:"demonstration"},"直接前往",-1),P={class:"block"},S=l("span",{class:"demonstration"},"完整功能",-1);f.render=function(s,p,c,o,r,d){const h=a("rol-pagination");return n(),t(e,null,[l("div",y,[b,l(h,{onSizeChange:o.handleSizeChange,onCurrentChange:o.handleCurrentChange,currentPage:o.currentPage1,"onUpdate:currentPage":p[1]||(p[1]=s=>o.currentPage1=s),"page-size":100,layout:"total, prev, pager, next",total:1e3},null,8,["onSizeChange","onCurrentChange","currentPage"])]),l("div",k,[z,l(h,{onSizeChange:o.handleSizeChange,onCurrentChange:o.handleCurrentChange,currentPage:o.currentPage2,"onUpdate:currentPage":p[2]||(p[2]=s=>o.currentPage2=s),"page-sizes":[100,200,300,400],"page-size":100,layout:"sizes, prev, pager, next",total:1e3},null,8,["onSizeChange","onCurrentChange","currentPage"])]),l("div",x,[w,l(h,{onSizeChange:o.handleSizeChange,onCurrentChange:o.handleCurrentChange,currentPage:o.currentPage3,"onUpdate:currentPage":p[3]||(p[3]=s=>o.currentPage3=s),"page-size":100,layout:"prev, pager, next, jumper",total:1e3},null,8,["onSizeChange","onCurrentChange","currentPage"])]),l("div",P,[S,l(h,{onSizeChange:o.handleSizeChange,onCurrentChange:o.handleCurrentChange,"current-page":o.currentPage4,"page-sizes":[100,200,300,400],"page-size":100,layout:"total, sizes, prev, pager, next, jumper",total:400},null,8,["onSizeChange","onCurrentChange","current-page"])])],64)};const H={data:()=>({value:!1})};H.render=function(s,p,c,o,r,d){const h=a("rol-switch"),g=a("rol-pagination");return n(),t(e,null,[l(h,{modelValue:r.value,"onUpdate:modelValue":p[1]||(p[1]=s=>r.value=s)},null,8,["modelValue"]),l(g,{"hide-on-single-page":r.value,total:5,layout:"prev, pager, next"},null,8,["hide-on-single-page"])],64)};const A=c({components:{vdpv_0:i,vdpv_1:_,vdpv_2:q,vdpv_3:C,vdpv_4:f,vdpv_5:H},setup(a){const n=p(),t=p(),l=p(),e=p(),c=p(),d=p(),h=[n,t,l,e,c,d],g=o({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px",vdpv_4Height:"0px",vdpv_5Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===g[a+"Height"]?g[a+"Height"]=((h[s].value?h[s].value.offsetHeight:0)||0)+"px":g[a+"Height"]="0px"}},r(g)),{vdpv_0Ref:n,vdpv_1Ref:t,vdpv_2Ref:l,vdpv_3Ref:e,vdpv_4Ref:c,vdpv_5Ref:d})}});A.$vd={matter:{title:"Pagination",description:"Pagination component doc",wrapperClass:"pagination-demo-wrapper",tags:["components","navigation"]},toc:[{content:"Pagination 分页",anchor:"pagination-分页",level:1},{content:"基础用法",anchor:"基础用法",level:2},{content:"设置最大页码按钮数",anchor:"设置最大页码按钮数",level:2},{content:"带有背景色的分页",anchor:"带有背景色的分页",level:2},{content:"小型分页",anchor:"小型分页",level:2},{content:"附加功能",anchor:"附加功能",level:2},{content:"当只有一页时隐藏分页",anchor:"当只有一页时隐藏分页",level:2},{content:"Attributes",anchor:"attributes",level:3},{content:"Events",anchor:"events",level:3},{content:"Slot",anchor:"slot",level:3}]};const R=A,I={class:"vuedoc  pagination-demo-wrapper"},$=h('<h1 id="pagination-分页" data-source-line="2"><a class="markdownIt-Anchor" href="#pagination-分页">#</a> Pagination 分页</h1><p data-source-line="4">当数据量过多时，使用分页分解数据。</p><h2 id="基础用法" data-source-line="6"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h2><p data-source-line="8">设置<code>layout</code>，表示需要显示的内容，用逗号分隔，布局元素会依次显示。<code>prev</code>表示上一页，<code>next</code>为下一页，<code>pager</code>表示页码列表，除此以外还提供了<code>jumper</code>和<code>total</code>，<code>size</code>和特殊的布局符号<code>-&gt;</code>，<code>-&gt;</code>后的元素会靠右显示，<code>jumper</code>表示跳页元素，<code>total</code>表示总条目数，<code>size</code>用于设置每页显示的页码数量。</p><pre style="display:none;"></pre>',5),U={class:"vuedoc-demo "},V={class:"vuedoc-demo__inner"},E={class:"vuedoc-demo__preview"},B={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},F=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>页数较少时的效果<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>大于 7 页时的效果<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),N=l("h2",{id:"设置最大页码按钮数","data-source-line":"23"},[l("a",{class:"markdownIt-Anchor",href:"#设置最大页码按钮数"},"#"),g(" 设置最大页码按钮数")],-1),O=l("p",{"data-source-line":"25"},[g("默认情况下，当总页数超过 7 页时，Pagination 会折叠多余的页码按钮。通过"),l("code",null,"pager-count"),g("属性可以设置最大页码按钮数。")],-1),D=l("pre",{style:{display:"none"}},null,-1),G={class:"vuedoc-demo "},J={class:"vuedoc-demo__inner"},K={class:"vuedoc-demo__preview"},L={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},M=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">:page-size</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">:pager-count</span>=<span class="hljs-string">&quot;11&quot;</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),Q=l("h2",{id:"带有背景色的分页","data-source-line":"33"},[l("a",{class:"markdownIt-Anchor",href:"#带有背景色的分页"},"#"),g(" 带有背景色的分页")],-1),T=l("p",{"data-source-line":"35"},[g("设置"),l("code",null,"background"),g("属性可以为分页按钮添加背景色。")],-1),W=l("pre",{style:{display:"none"}},null,-1),X={class:"vuedoc-demo "},Y={class:"vuedoc-demo__inner"},Z={class:"vuedoc-demo__preview"},ss={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},as=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">background</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),ns=l("h2",{id:"小型分页","data-source-line":"43"},[l("a",{class:"markdownIt-Anchor",href:"#小型分页"},"#"),g(" 小型分页")],-1),ts=l("p",{"data-source-line":"45"},[g("只需要一个"),l("code",null,"small"),g("属性，它接受一个"),l("code",null,"Boolean"),g("，默认为"),l("code",null,"false"),g("，设为"),l("code",null,"true"),g("即可启用。")],-1),ls=l("pre",{style:{display:"none"}},null,-1),es={class:"vuedoc-demo "},ps={class:"vuedoc-demo__inner"},cs={class:"vuedoc-demo__preview"},os={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},rs=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">small</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),ds=l("h2",{id:"附加功能","data-source-line":"53"},[l("a",{class:"markdownIt-Anchor",href:"#附加功能"},"#"),g(" 附加功能")],-1),hs=l("p",{"data-source-line":"55"},[g("此例是一个完整的用例，使用了"),l("code",null,"size-change"),g("和"),l("code",null,"current-change"),g("事件来处理页码大小和当前页变动时候触发的事件。"),l("code",null,"page-sizes"),g("接受一个整型数组，数组元素为展示的选择每页显示个数的选项，"),l("code",null,"[100, 200, 300, 400]"),g("表示四个选项，每页显示 100 个，200 个，300 个或者 400 个。")],-1),gs=l("pre",{style:{display:"none"}},null,-1),is={class:"vuedoc-demo "},us={class:"vuedoc-demo__inner"},js={class:"vuedoc-demo__preview"},vs={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},ms=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>显示总数<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span>\n      @<span class="hljs-attr">size-change</span>=<span class="hljs-string">&quot;handleSizeChange&quot;</span>\n      @<span class="hljs-attr">current-change</span>=<span class="hljs-string">&quot;handleCurrentChange&quot;</span>\n      <span class="hljs-attr">v-model:currentPage</span>=<span class="hljs-string">&quot;currentPage1&quot;</span>\n      <span class="hljs-attr">:page-size</span>=<span class="hljs-string">&quot;100&quot;</span>\n      <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;total, prev, pager, next&quot;</span>\n      <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>\n    &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>调整每页显示条数<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span>\n      @<span class="hljs-attr">size-change</span>=<span class="hljs-string">&quot;handleSizeChange&quot;</span>\n      @<span class="hljs-attr">current-change</span>=<span class="hljs-string">&quot;handleCurrentChange&quot;</span>\n      <span class="hljs-attr">v-model:currentPage</span>=<span class="hljs-string">&quot;currentPage2&quot;</span>\n      <span class="hljs-attr">:page-sizes</span>=<span class="hljs-string">&quot;[100, 200, 300, 400]&quot;</span>\n      <span class="hljs-attr">:page-size</span>=<span class="hljs-string">&quot;100&quot;</span>\n      <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;sizes, prev, pager, next&quot;</span>\n      <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>\n    &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>直接前往<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span>\n      @<span class="hljs-attr">size-change</span>=<span class="hljs-string">&quot;handleSizeChange&quot;</span>\n      @<span class="hljs-attr">current-change</span>=<span class="hljs-string">&quot;handleCurrentChange&quot;</span>\n      <span class="hljs-attr">v-model:currentPage</span>=<span class="hljs-string">&quot;currentPage3&quot;</span>\n      <span class="hljs-attr">:page-size</span>=<span class="hljs-string">&quot;100&quot;</span>\n      <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next, jumper&quot;</span>\n      <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;1000&quot;</span>\n    &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>完整功能<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span>\n      @<span class="hljs-attr">size-change</span>=<span class="hljs-string">&quot;handleSizeChange&quot;</span>\n      @<span class="hljs-attr">current-change</span>=<span class="hljs-string">&quot;handleCurrentChange&quot;</span>\n      <span class="hljs-attr">:current-page</span>=<span class="hljs-string">&quot;currentPage4&quot;</span>\n      <span class="hljs-attr">:page-sizes</span>=<span class="hljs-string">&quot;[100, 200, 300, 400]&quot;</span>\n      <span class="hljs-attr">:page-size</span>=<span class="hljs-string">&quot;100&quot;</span>\n      <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;total, sizes, prev, pager, next, jumper&quot;</span>\n      <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;400&quot;</span>\n    &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> currentPage1 = ref(<span class="hljs-number">5</span>)\n    <span class="hljs-keyword">const</span> currentPage2 = ref(<span class="hljs-number">5</span>)\n    <span class="hljs-keyword">const</span> currentPage3 = ref(<span class="hljs-number">5</span>)\n    <span class="hljs-keyword">const</span> currentPage4 = ref(<span class="hljs-number">5</span>)\n\n    <span class="hljs-keyword">const</span> handleSizeChange = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`每页 <span class="hljs-subst">${val}</span> 条`</span>)\n    }\n    <span class="hljs-keyword">const</span> handleCurrentChange = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`当前页: <span class="hljs-subst">${val}</span>`</span>)\n    }\n\n    <span class="hljs-keyword">return</span> {\n      currentPage1,\n      currentPage2,\n      currentPage3,\n      currentPage4,\n      handleSizeChange,\n      handleCurrentChange,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),_s=l("h2",{id:"当只有一页时隐藏分页","data-source-line":"141"},[l("a",{class:"markdownIt-Anchor",href:"#当只有一页时隐藏分页"},"#"),g(" 当只有一页时隐藏分页")],-1),qs=l("p",{"data-source-line":"143"},[g("当只有一页时，通过设置 "),l("code",null,"hide-on-single-page"),g(" 属性来隐藏分页。")],-1),Cs=l("pre",{style:{display:"none"}},null,-1),fs={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},bs={class:"vuedoc-demo__preview"},ks={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},zs=h('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-pagination</span> <span class="hljs-attr">:hide-on-single-page</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:total</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;prev, pager, next&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-pagination</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">value</span>: <span class="hljs-literal">false</span>,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),xs=h('<h3 id="attributes" data-source-line="162"><a class="markdownIt-Anchor" href="#attributes">#</a> Attributes</h3><table data-source-line="164"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>small</td><td>是否使用小型分页样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>background</td><td>是否为分页按钮添加背景色</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>page-size</td><td>每页显示条目个数，支持 .sync 修饰符</td><td>number</td><td>—</td><td>10</td></tr><tr><td>total</td><td>总条目数</td><td>number</td><td>—</td><td>—</td></tr><tr><td>page-count</td><td>总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能；如果要支持 page-sizes 的更改，则需要使用 total 属性</td><td>Number</td><td>—</td><td>—</td></tr><tr><td>pager-count</td><td>页码按钮的数量，当总页数超过该值时会折叠</td><td>number</td><td>大于等于 5 且小于等于 21 的奇数</td><td>7</td></tr><tr><td>current-page</td><td>当前页数，支持 .sync 修饰符</td><td>number</td><td>—</td><td>1</td></tr><tr><td>layout</td><td>组件布局，子组件名用逗号分隔</td><td>String</td><td><code>sizes</code>, <code>prev</code>, <code>pager</code>, <code>next</code>, <code>jumper</code>, <code>-&gt;</code>, <code>total</code>, <code>slot</code></td><td>‘prev, pager, next, jumper, -&gt;, total’</td></tr><tr><td>page-sizes</td><td>每页显示个数选择器的选项设置</td><td>number[]</td><td>—</td><td>[10, 20, 30, 40, 50, 100]</td></tr><tr><td>popper-class</td><td>每页显示个数选择器的下拉框类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prev-text</td><td>替代图标显示的上一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>next-text</td><td>替代图标显示的下一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>hide-on-single-page</td><td>只有一页时是否隐藏</td><td>boolean</td><td>—</td><td>-</td></tr></tbody></table><h3 id="events" data-source-line="181"><a class="markdownIt-Anchor" href="#events">#</a> Events</h3><table data-source-line="183"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>size-change</td><td>pageSize 改变时会触发</td><td>每页条数</td></tr><tr><td>current-change</td><td>currentPage 改变时会触发</td><td>当前页</td></tr><tr><td>prev-click</td><td>用户点击上一页按钮改变当前页后触发</td><td>当前页</td></tr><tr><td>next-click</td><td>用户点击下一页按钮改变当前页后触发</td><td>当前页</td></tr></tbody></table><h3 id="slot" data-source-line="190"><a class="markdownIt-Anchor" href="#slot">#</a> Slot</h3><table data-source-line="192"><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>自定义内容，需要在 <code>layout</code> 中列出 <code>slot</code></td></tr></tbody></table>',6);R.render=function(s,e,p,c,o,r){const h=a("vdpv_0"),g=a("vdpv_1"),i=a("vdpv_2"),u=a("vdpv_3"),j=a("vdpv_4"),v=a("vdpv_5");return n(),t("div",I,[$,l("div",U,[l("div",V,[l("div",E,[l(h)]),l("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[l("div",B,[F],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[1]||(e[1]=a=>s.toggleCode(0))},d(s.vdpv_0Height>0?"hidden":"show"),1)])]),N,O,D,l("div",G,[l("div",J,[l("div",K,[l(g)]),l("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[l("div",L,[M],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[2]||(e[2]=a=>s.toggleCode(1))},d(s.vdpv_1Height>0?"hidden":"show"),1)])]),Q,T,W,l("div",X,[l("div",Y,[l("div",Z,[l(i)]),l("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[l("div",ss,[as],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[3]||(e[3]=a=>s.toggleCode(2))},d(s.vdpv_2Height>0?"hidden":"show"),1)])]),ns,ts,ls,l("div",es,[l("div",ps,[l("div",cs,[l(u)]),l("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[l("div",os,[rs],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[4]||(e[4]=a=>s.toggleCode(3))},d(s.vdpv_3Height>0?"hidden":"show"),1)])]),ds,hs,gs,l("div",is,[l("div",us,[l("div",js,[l(j)]),l("div",{style:{height:s.vdpv_4Height},class:"vuedoc-demo__source"},[l("div",vs,[ms],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[5]||(e[5]=a=>s.toggleCode(4))},d(s.vdpv_4Height>0?"hidden":"show"),1)])]),_s,qs,Cs,l("div",fs,[l("div",ys,[l("div",bs,[l(v)]),l("div",{style:{height:s.vdpv_5Height},class:"vuedoc-demo__source"},[l("div",ks,[zs],512)],4),l("div",{class:"vuedoc-demo__footer",onClick:e[6]||(e[6]=a=>s.toggleCode(5))},d(s.vdpv_5Height>0?"hidden":"show"),1)])]),xs])};export default R;
