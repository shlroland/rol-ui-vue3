var s=Object.assign;import{r as a,o as t,c as l,a as n,w as e,F as c,k as o,i as p,f as d,g as r,h,t as i,j as u,b as g}from"./index.0ec2094a.js";const v={},j={class:"demo-carousel"},m={class:"block"},_=n("span",{class:"demonstration"},"默认 Hover 指示器触发",-1),q={class:"small"},f={class:"block"},y=n("span",{class:"demonstration"},"Click 指示器触发",-1),k={class:"small"};v.render=function(s,d){const r=a("rol-carousel-item"),h=a("rol-carousel");return t(),l("div",j,[n("div",m,[_,n(h,{height:"150px"},{default:e((()=>[(t(),l(c,null,o(4,(s=>n(r,{key:s},{default:e((()=>[n("h3",q,p(s),1)])),_:2},1024))),64))])),_:1})]),n("div",f,[y,n(h,{trigger:"click",height:"150px"},{default:e((()=>[(t(),l(c,null,o(4,(s=>n(r,{key:s},{default:e((()=>[n("h3",k,p(s),1)])),_:2},1024))),64))])),_:1})])])};const b={};b.render=function(s,d){const r=a("rol-carousel-item"),h=a("rol-carousel");return t(),l(h,{"indicator-position":"outside"},{default:e((()=>[(t(),l(c,null,o(4,(s=>n(r,{key:s},{default:e((()=>[n("h3",null,p(s),1)])),_:2},1024))),64))])),_:1})};const w={};w.render=function(s,d){const r=a("rol-carousel-item"),h=a("rol-carousel");return t(),l(h,{interval:5e3,arrow:"always"},{default:e((()=>[(t(),l(c,null,o(4,(s=>n(r,{key:s},{default:e((()=>[n("h3",null,p(s),1)])),_:2},1024))),64))])),_:1})};const C={},x={class:"medium"};C.render=function(s,d){const r=a("rol-carousel-item"),h=a("rol-carousel");return t(),l(h,{interval:4e3,type:"card",height:"200px"},{default:e((()=>[(t(),l(c,null,o(6,(s=>n(r,{key:s},{default:e((()=>[n("h3",x,p(s),1)])),_:2},1024))),64))])),_:1})};const H={},A={class:"medium"};H.render=function(s,d){const r=a("rol-carousel-item"),h=a("rol-carousel");return t(),l(h,{height:"200px",direction:"vertical",autoplay:!1},{default:e((()=>[(t(),l(c,null,o(3,(s=>n(r,{key:s},{default:e((()=>[n("h3",A,p(s),1)])),_:2},1024))),64))])),_:1})};const I=d({components:{vdpv_0:v,vdpv_1:b,vdpv_2:w,vdpv_3:C,vdpv_4:H},setup(a){const t=r(),l=r(),n=r(),e=r(),c=r(),o=[t,l,n,e,c],p=h({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px",vdpv_4Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===p[a+"Height"]?p[a+"Height"]=((o[s].value?o[s].value.offsetHeight:0)||0)+"px":p[a+"Height"]="0px"}},i(p)),{vdpv_0Ref:t,vdpv_1Ref:l,vdpv_2Ref:n,vdpv_3Ref:e,vdpv_4Ref:c})}});I.$vd={matter:{title:"Carousel",description:"Carousel component doc",wrapperClass:"carousel-demo-wrapper",tags:["components","data"]},toc:[{content:"Carousel 走马灯",anchor:"carousel-走马灯",level:1},{content:"基础用法",anchor:"基础用法",level:2},{content:"指示器",anchor:"指示器",level:2},{content:"切换箭头",anchor:"切换箭头",level:2},{content:"卡片化",anchor:"卡片化",level:2},{content:"方向",anchor:"方向",level:2},{content:"Carousel Attributes",anchor:"carousel-attributes",level:3},{content:"Carousel Events",anchor:"carousel-events",level:3},{content:"Carousel Methods",anchor:"carousel-methods",level:3},{content:"Carousel-Item Attributes",anchor:"carousel-item-attributes",level:3}]};const R=I,z={class:"vuedoc  carousel-demo-wrapper"},E=u('<h1 id="carousel-走马灯" data-source-line="2"><a class="markdownIt-Anchor" href="#carousel-走马灯">#</a> Carousel 走马灯</h1><p data-source-line="4">在有限空间内，循环播放同一类型的图片、文字等内容</p><h2 id="基础用法" data-source-line="6"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h2><p data-source-line="8">结合使用<code>rol-carousel</code>和<code>rol-carousel-item</code>标签就得到了一个走马灯。幻灯片的内容是任意的，需要放在<code>rol-carousel-item</code>标签中。默认情况下，在鼠标 hover 底部的指示器时就会触发切换。通过设置<code>trigger</code>属性为<code>click</code>，可以达到点击触发的效果。</p><pre style="display:none;"></pre>',5),M={class:"vuedoc-demo "},F={class:"vuedoc-demo__inner"},O={class:"vuedoc-demo__preview"},$={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},B=u('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-carousel&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>默认 Hover 指示器触发<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demonstration&quot;</span>&gt;</span>Click 指示器触发<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;click&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),D=n("h2",{id:"指示器","data-source-line":"33"},[n("a",{class:"markdownIt-Anchor",href:"#指示器"},"#"),g(" 指示器")],-1),G=n("p",{"data-source-line":"35"},[n("code",null,"indicator-position"),g("属性定义了指示器的位置。默认情况下，它会显示在走马灯内部，设置为"),n("code",null,"outside"),g("则会显示在外部；设置为"),n("code",null,"none"),g("则不会显示指示器。")],-1),J=n("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},L={class:"vuedoc-demo__inner"},N={class:"vuedoc-demo__preview"},P={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Q=u('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">indicator-position</span>=<span class="hljs-string">&quot;outside&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),S=n("h2",{id:"切换箭头","data-source-line":"47"},[n("a",{class:"markdownIt-Anchor",href:"#切换箭头"},"#"),g(" 切换箭头")],-1),T=n("p",{"data-source-line":"49"},[n("code",null,"arrow"),g("属性定义了切换箭头的显示时机。默认情况下，切换箭头只有在鼠标 hover 到走马灯上时才会显示；若将"),n("code",null,"arrow"),g("设置为"),n("code",null,"always"),g("，则会一直显示；设置为"),n("code",null,"never"),g("，则会一直隐藏。")],-1),U=n("pre",{style:{display:"none"}},null,-1),V={class:"vuedoc-demo "},W={class:"vuedoc-demo__inner"},X={class:"vuedoc-demo__preview"},Y={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},Z=u('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">:interval</span>=<span class="hljs-string">&quot;5000&quot;</span> <span class="hljs-attr">arrow</span>=<span class="hljs-string">&quot;always&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),ss=n("h2",{id:"卡片化","data-source-line":"61"},[n("a",{class:"markdownIt-Anchor",href:"#卡片化"},"#"),g(" 卡片化")],-1),as=n("p",{"data-source-line":"63"},[g("将"),n("code",null,"type"),g("属性设置为"),n("code",null,"card"),g("即可启用卡片模式。从交互上来说，卡片模式和一般模式的最大区别在于，可以通过直接点击两侧的幻灯片进行切换。")],-1),ts=n("pre",{style:{display:"none"}},null,-1),ls={class:"vuedoc-demo "},ns={class:"vuedoc-demo__inner"},es={class:"vuedoc-demo__preview"},cs={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},os=u('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">:interval</span>=<span class="hljs-string">&quot;4000&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;card&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 6&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;medium&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),ps=n("h2",{id:"方向","data-source-line":"75"},[n("a",{class:"markdownIt-Anchor",href:"#方向"},"#"),g(" 方向")],-1),ds=n("p",{"data-source-line":"77"},[g("默认情况下，"),n("code",null,"direction"),g(" 为 "),n("code",null,"horizontal"),g("。通过设置 "),n("code",null,"direction"),g(" 为 "),n("code",null,"vertical"),g(" 来让走马灯在垂直方向上显示。")],-1),rs=n("pre",{style:{display:"none"}},null,-1),hs={class:"vuedoc-demo "},is={class:"vuedoc-demo__inner"},us={class:"vuedoc-demo__preview"},gs={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},vs=u('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;vertical&quot;</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-carousel-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in 3&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;medium&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-carousel</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),js=u('<h3 id="carousel-attributes" data-source-line="89"><a class="markdownIt-Anchor" href="#carousel-attributes">#</a> Carousel Attributes</h3><table data-source-line="91"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>height</td><td>走马灯的高度</td><td>string</td><td>—</td><td>—</td></tr><tr><td>initial-index</td><td>初始状态激活的幻灯片的索引，从 0 开始</td><td>number</td><td>—</td><td>0</td></tr><tr><td>trigger</td><td>指示器的触发方式</td><td>string</td><td>click</td><td>—</td></tr><tr><td>autoplay</td><td>是否自动切换</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>interval</td><td>自动切换的时间间隔，单位为毫秒</td><td>number</td><td>—</td><td>3000</td></tr><tr><td>indicator-position</td><td>指示器的位置</td><td>string</td><td>outside/none</td><td>—</td></tr><tr><td>arrow</td><td>切换箭头的显示时机</td><td>string</td><td>always/hover/never</td><td>hover</td></tr><tr><td>type</td><td>走马灯的类型</td><td>string</td><td>card</td><td>—</td></tr><tr><td>loop</td><td>是否循环显示</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>direction</td><td>走马灯展示的方向</td><td>string</td><td>horizontal/vertical</td><td>horizontal</td></tr></tbody></table><h3 id="carousel-events" data-source-line="104"><a class="markdownIt-Anchor" href="#carousel-events">#</a> Carousel Events</h3><table data-source-line="106"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>幻灯片切换时触发</td><td>目前激活的幻灯片的索引，原幻灯片的索引</td></tr></tbody></table><h3 id="carousel-methods" data-source-line="110"><a class="markdownIt-Anchor" href="#carousel-methods">#</a> Carousel Methods</h3><table data-source-line="112"><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>setActiveItem</td><td>手动切换幻灯片</td><td>需要切换的幻灯片的索引，从 0 开始；或相应 <code>rol-carousel-item</code> 的 <code>name</code> 属性值</td></tr><tr><td>prev</td><td>切换至上一张幻灯片</td><td>—</td></tr><tr><td>next</td><td>切换至下一张幻灯片</td><td>—</td></tr></tbody></table><h3 id="carousel-item-attributes" data-source-line="118"><a class="markdownIt-Anchor" href="#carousel-item-attributes">#</a> Carousel-Item Attributes</h3><table data-source-line="120"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>幻灯片的名字，可用作 <code>setActiveItem</code> 的参数</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>该幻灯片所对应指示器的文本</td><td>string</td><td>—</td><td>—</td></tr></tbody></table>',8);R.render=function(s,e,c,o,d,r){const h=a("vdpv_0"),i=a("vdpv_1"),u=a("vdpv_2"),g=a("vdpv_3"),v=a("vdpv_4");return t(),l("div",z,[E,n("div",M,[n("div",F,[n("div",O,[n(h)]),n("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[n("div",$,[B],512)],4),n("div",{class:"vuedoc-demo__footer",onClick:e[1]||(e[1]=a=>s.toggleCode(0))},p(s.vdpv_0Height>0?"hidden":"show"),1)])]),D,G,J,n("div",K,[n("div",L,[n("div",N,[n(i)]),n("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[n("div",P,[Q],512)],4),n("div",{class:"vuedoc-demo__footer",onClick:e[2]||(e[2]=a=>s.toggleCode(1))},p(s.vdpv_1Height>0?"hidden":"show"),1)])]),S,T,U,n("div",V,[n("div",W,[n("div",X,[n(u)]),n("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[n("div",Y,[Z],512)],4),n("div",{class:"vuedoc-demo__footer",onClick:e[3]||(e[3]=a=>s.toggleCode(2))},p(s.vdpv_2Height>0?"hidden":"show"),1)])]),ss,as,ts,n("div",ls,[n("div",ns,[n("div",es,[n(g)]),n("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[n("div",cs,[os],512)],4),n("div",{class:"vuedoc-demo__footer",onClick:e[4]||(e[4]=a=>s.toggleCode(3))},p(s.vdpv_3Height>0?"hidden":"show"),1)])]),ps,ds,rs,n("div",hs,[n("div",is,[n("div",us,[n(v)]),n("div",{style:{height:s.vdpv_4Height},class:"vuedoc-demo__source"},[n("div",gs,[vs],512)],4),n("div",{class:"vuedoc-demo__footer",onClick:e[5]||(e[5]=a=>s.toggleCode(4))},p(s.vdpv_4Height>0?"hidden":"show"),1)])]),js])};export default R;
