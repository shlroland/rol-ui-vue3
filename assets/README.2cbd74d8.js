var s=Object.assign;import{g as a,r as l,o as n,c as t,w as e,F as p,k as c,a as o,i as r,l as d,f as h,h as i,t as u,b as j,j as v}from"./index.0ec2094a.js";const g={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};g.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])};const m={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular",disabled:!0},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};m.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value,disabled:s.disabled},null,8,["label","value","disabled"])))),128))])),_:1},8,["modelValue"])};const b={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};b.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),placeholder:"请选择",disabled:""},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])};const f={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};f.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),placeholder:"请选择",clearable:""},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])};const _={setup:()=>({value1:a(""),value2:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};_.render=function(s,a,r,d,h,i){const u=l("rol-select-option"),j=l("rol-select");return n(),t(p,null,[o(j,{modelValue:d.value1,"onUpdate:modelValue":a[1]||(a[1]=s=>d.value1=s),placeholder:"请选择",multiple:""},{default:e((()=>[(n(!0),t(p,null,c(d.options,(s=>(n(),t(u,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"]),o(j,{modelValue:d.value2,"onUpdate:modelValue":a[2]||(a[2]=s=>d.value2=s),placeholder:"请选择",multiple:"","collapse-tags":"",style:{"margin-left":"20px"}},{default:e((()=>[(n(!0),t(p,null,c(d.options,(s=>(n(),t(u,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])],64)};const y={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})},k={style:{float:"left"}},q={style:{float:"right",color:"#8492a6","font-size":"13px"}};y.render=function(s,a,d,h,i,u){const j=l("rol-select-option"),v=l("rol-select");return n(),t(v,{modelValue:h.value,"onUpdate:modelValue":a[1]||(a[1]=s=>h.value=s),placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(h.options,(s=>(n(),t(j,{key:s.value,label:s.label,value:s.value},{default:e((()=>[o("span",k,r(s.label),1),o("span",q,r(s.value),1)])),_:2},1032,["label","value"])))),128))])),_:1},8,["modelValue"])};const w={setup:()=>({value:a(""),options:a([{label:"热门城市",options:[{value:"Shanghai",label:"上海"},{value:"Beijing",label:"北京"}]},{label:"城市名",options:[{value:"Chengdu",label:"成都"},{value:"Shenzhen",label:"深圳"},{value:"Guangzhou",label:"广州"},{value:"Dalian",label:"大连"}]}])})};w.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-option-group"),j=l("rol-select");return n(),t(j,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(u,{key:s.label,label:s.label},{default:e((()=>[(n(!0),t(p,null,c(s.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:2},1032,["label"])))),128))])),_:1},8,["modelValue"])};const x={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};x.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),filterable:"",placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])};const V={setup:()=>({value:a(""),options:a([{value:"选项1",label:"Vue.js"},{value:"选项2",label:"React"},{value:"选项3",label:"Angular"},{value:"选项4",label:"Next.js"},{value:"选项5",label:"Nuxt.js"}])})};V.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),multiple:"",filterable:"","allow-create":"","default-first-option":"",placeholder:"请选择"},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue"])};const N={setup(){const s=a(""),l=a(!1),n=a([{value:"value:Maine",label:"label:Maine"}]);let t=[];const e=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"];d((()=>{t=e.map((s=>({value:`value:${s}`,label:`label:${s}`})))}));return{value:s,options:n,list:t,loading:l,remoteMethod:s=>{""!==s?(l.value=!0,setTimeout((()=>{l.value=!1,n.value=t.filter((a=>a.label.toLowerCase().indexOf(s.toLowerCase())>-1)),n.value.push("a")}),200)):n.value=[]}}}};N.render=function(s,a,o,r,d,h){const i=l("rol-select-option"),u=l("rol-select");return n(),t(u,{modelValue:r.value,"onUpdate:modelValue":a[1]||(a[1]=s=>r.value=s),multiple:"",filterable:"",remote:"","reserve-keyword":"",placeholder:"请输入关键词","remote-method":r.remoteMethod,loading:r.loading},{default:e((()=>[(n(!0),t(p,null,c(r.options,(s=>(n(),t(i,{key:s.value,label:s.label,value:s.value},null,8,["label","value"])))),128))])),_:1},8,["modelValue","remote-method","loading"])};const A=h({components:{vdpv_0:g,vdpv_1:m,vdpv_2:b,vdpv_3:f,vdpv_4:_,vdpv_5:y,vdpv_6:w,vdpv_7:x,vdpv_8:V,vdpv_9:N},setup(l){const n=a(),t=a(),e=a(),p=a(),c=a(),o=a(),r=a(),d=a(),h=a(),j=a(),v=[n,t,e,p,c,o,r,d,h,j],g=i({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px",vdpv_4Height:"0px",vdpv_5Height:"0px",vdpv_6Height:"0px",vdpv_7Height:"0px",vdpv_8Height:"0px",vdpv_9Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===g[a+"Height"]?g[a+"Height"]=((v[s].value?v[s].value.offsetHeight:0)||0)+"px":g[a+"Height"]="0px"}},u(g)),{vdpv_0Ref:n,vdpv_1Ref:t,vdpv_2Ref:e,vdpv_3Ref:p,vdpv_4Ref:c,vdpv_5Ref:o,vdpv_6Ref:r,vdpv_7Ref:d,vdpv_8Ref:h,vdpv_9Ref:j})}});A.$vd={matter:{title:"Select",description:"Select component doc",tags:["components","form"]},toc:[{content:"Select 选择器",anchor:"select-选择器",level:1},{content:"有禁用选项",anchor:"有禁用选项",level:2},{content:"禁用状态",anchor:"禁用状态",level:2},{content:"可清空单选",anchor:"可清空单选",level:2},{content:"基础多选",anchor:"基础多选",level:2},{content:"自定义模板",anchor:"自定义模板",level:2},{content:"分组",anchor:"分组",level:3},{content:"可搜索",anchor:"可搜索",level:2},{content:"创建条目",anchor:"创建条目",level:2},{content:"远程搜索",anchor:"远程搜索",level:2},{content:"Select Attributes",anchor:"select-attributes",level:3},{content:"Select Events",anchor:"select-events",level:3},{content:"Select Slots",anchor:"select-slots",level:3},{content:"Option Group Attributes",anchor:"option-group-attributes",level:3},{content:"Option Attributes",anchor:"option-attributes",level:3},{content:"Methods",anchor:"methods",level:3}]};const H=A,R={class:"vuedoc  "},C=o("h1",{id:"select-选择器","data-source-line":"2"},[o("a",{class:"markdownIt-Anchor",href:"#select-选择器"},"#"),j(" Select 选择器")],-1),M=o("p",{"data-source-line":"4"},"当选项过多时，使用下拉菜单展示并选择内容。",-1),I=o("pre",{style:{display:"none"}},null,-1),S={class:"vuedoc-demo "},O={class:"vuedoc-demo__inner"},U={class:"vuedoc-demo__preview"},z={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},T=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),D=o("h2",{id:"有禁用选项","data-source-line":"50"},[o("a",{class:"markdownIt-Anchor",href:"#有禁用选项"},"#"),j(" 有禁用选项")],-1),W=o("p",{"data-source-line":"52"},[j("在"),o("code",null,"rol-option"),j("中，设定"),o("code",null,"disabled"),j("值为 true，即可禁用该选项")],-1),L=o("pre",{style:{display:"none"}},null,-1),G={class:"vuedoc-demo "},F={class:"vuedoc-demo__inner"},$={class:"vuedoc-demo__preview"},E={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},K=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span>\n      <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span>\n      <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>\n      <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;item.disabled&quot;</span>\n    &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),B=o("h2",{id:"禁用状态","data-source-line":"105"},[o("a",{class:"markdownIt-Anchor",href:"#禁用状态"},"#"),j(" 禁用状态")],-1),J=o("p",{"data-source-line":"107"},[j("为"),o("code",null,"rol-select"),j("设置"),o("code",null,"disabled"),j("属性，则整个选择器不可用")],-1),P=o("pre",{style:{display:"none"}},null,-1),Y={class:"vuedoc-demo "},Q={class:"vuedoc-demo__inner"},X={class:"vuedoc-demo__preview"},Z={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ss=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),as=v('<h2 id="可清空单选" data-source-line="153"><a class="markdownIt-Anchor" href="#可清空单选">#</a> 可清空单选</h2><p data-source-line="155">包含清空按钮，可将选择器清空为初始状态</p><p data-source-line="157"><code>rol-select</code>设置<code>clearable</code>属性，则可将选择器清空。<br><code>clearable</code>属性仅适用于单选。</p><pre style="display:none;"></pre>',4),ls={class:"vuedoc-demo "},ns={class:"vuedoc-demo__inner"},ts={class:"vuedoc-demo__preview"},es={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},ps=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span> <span class="hljs-attr">clearable</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),cs=v('<h2 id="基础多选" data-source-line="204"><a class="markdownIt-Anchor" href="#基础多选">#</a> 基础多选</h2><p data-source-line="206">适用性较广的基础多选，用 Tag 展示已选项<br> 为<code>rol-select</code>设置<code>multiple</code>属性即可启用多选，此时<code>v-model</code>的值为当前选中值所组成的数组。默认情况下选中值会以 Tag 的形式展现，你也可以设置<code>collapse-tags</code>属性将它们合并为一段文字。</p><pre style="display:none;"></pre>',3),os={class:"vuedoc-demo "},rs={class:"vuedoc-demo__inner"},ds={class:"vuedoc-demo__preview"},hs={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},is=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span> <span class="hljs-attr">multiple</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">collapse-tags</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-left: 20px;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value1 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),us=v('<h2 id="自定义模板" data-source-line="260"><a class="markdownIt-Anchor" href="#自定义模板">#</a> 自定义模板</h2><p data-source-line="262">可以自定义备选项</p><p data-source-line="264">将自定义的 HTML 模板插入<code>rol-select-option</code>的 slot 中即可。</p><pre style="display:none;"></pre>',4),js={class:"vuedoc-demo "},vs={class:"vuedoc-demo__inner"},gs={class:"vuedoc-demo__preview"},ms={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},bs=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left&quot;</span>&gt;</span>{{ item.label }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: right; color: #8492a6; font-size: 13px&quot;</span>&gt;</span>{{ item.value }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),fs=v('<h3 id="分组" data-source-line="312"><a class="markdownIt-Anchor" href="#分组">#</a> 分组</h3><p data-source-line="314">备选项进行分组展示</p><p data-source-line="316">使用<code>rol-option-group</code>对备选项进行分组，它的<code>label</code>属性为分组名</p><pre style="display:none;"></pre>',4),_s={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},ks={class:"vuedoc-demo__preview"},qs={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},ws=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-option-group</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;group in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;group.label&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;group.label&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in group.options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-option-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;热门城市&#39;</span>,\n        <span class="hljs-attr">options</span>: [\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Shanghai&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;上海&#39;</span>,\n          },\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Beijing&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;北京&#39;</span>,\n          },\n        ],\n      },\n      {\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;城市名&#39;</span>,\n        <span class="hljs-attr">options</span>: [\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Chengdu&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;成都&#39;</span>,\n          },\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Shenzhen&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;深圳&#39;</span>,\n          },\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Guangzhou&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;广州&#39;</span>,\n          },\n          {\n            <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;Dalian&#39;</span>,\n            <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;大连&#39;</span>,\n          },\n        ],\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),xs=v('<h2 id="可搜索" data-source-line="378"><a class="markdownIt-Anchor" href="#可搜索">#</a> 可搜索</h2><p data-source-line="380">可以利用搜索功能快速查找选项</p><p data-source-line="382">为<code>rol-select</code>添加<code>filterable</code>属性即可启用搜索功能。默认情况下，Select 会找出所有<code>label</code>属性包含输入值的选项。如果希望使用其他的搜索逻辑，可以通过传入一个<code>filter-method</code>来实现。<code>filter-method</code>为一个<code>Function</code>，它会在输入值发生变化时调用，参数为当前输入值。</p><pre style="display:none;"></pre>',4),Vs={class:"vuedoc-demo "},Ns={class:"vuedoc-demo__inner"},As={class:"vuedoc-demo__preview"},Hs={ref:"vdpv_7Ref",class:"vuedoc-demo__sourceref"},Rs=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">filterable</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Cs=o("h2",{id:"创建条目","data-source-line":"428"},[o("a",{class:"markdownIt-Anchor",href:"#创建条目"},"#"),j(" 创建条目")],-1),Ms=o("p",{"data-source-line":"430"},[j("可以创建并选中选项中不存在的条目 :::demo 使用"),o("code",null,"allow-create"),j("属性即可通过在输入框中输入文字来创建新的条目。注意此时"),o("code",null,"filterable"),j("必须为真")],-1),Is=o("pre",{style:{display:"none"}},null,-1),Ss={class:"vuedoc-demo "},Os={class:"vuedoc-demo__inner"},Us={class:"vuedoc-demo__preview"},zs={ref:"vdpv_8Ref",class:"vuedoc-demo__sourceref"},Ts=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">filterable</span> <span class="hljs-attr">allow-create</span> <span class="hljs-attr">default-first-option</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> options = ref([\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项1&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Vue.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项2&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;React&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项3&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Angular&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项4&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Next.js&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;选项5&#39;</span>,\n        <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;Nuxt.js&#39;</span>,\n      },\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Ds=v('<h2 id="远程搜索" data-source-line="477"><a class="markdownIt-Anchor" href="#远程搜索">#</a> 远程搜索</h2><p data-source-line="479">从服务器搜索数据，输入关键字进行查找</p><p data-source-line="481">为了启用远程搜索，需要将<code>filterable</code>和<code>remote</code>设置为<code>true</code>，同时传入一个<code>remote-method</code>。<code>remote-method</code>为一个<code>Function</code>，它会在输入值发生变化时调用，参数为当前输入值。需要注意的是，如果<code>rol-option</code>是通过<code>v-for</code>指令渲染出来的，此时需要为<code>rol-select-option</code>添加<code>key</code>属性，且其值需具有唯一性，比如此例中的<code>item.value</code>。</p><pre style="display:none;"></pre>',4),Ws={class:"vuedoc-demo "},Ls={class:"vuedoc-demo__inner"},Gs={class:"vuedoc-demo__preview"},Fs={ref:"vdpv_9Ref",class:"vuedoc-demo__sourceref"},$s=v('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">multiple</span>\n    <span class="hljs-attr">filterable</span>\n    <span class="hljs-attr">remote</span>\n    <span class="hljs-attr">reserve-keyword</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入关键词&quot;</span>\n    <span class="hljs-attr">:remote-method</span>=<span class="hljs-string">&quot;remoteMethod&quot;</span>\n    <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in options&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.value&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.label&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.value&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> loading = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> options = ref([{ <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;value:Maine&#39;</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;label:Maine&#39;</span> }])\n    <span class="hljs-keyword">let</span> list = []\n    <span class="hljs-keyword">const</span> states = [\n      <span class="hljs-string">&#39;Alabama&#39;</span>,\n      <span class="hljs-string">&#39;Alaska&#39;</span>,\n      <span class="hljs-string">&#39;Arizona&#39;</span>,\n      <span class="hljs-string">&#39;Arkansas&#39;</span>,\n      <span class="hljs-string">&#39;California&#39;</span>,\n      <span class="hljs-string">&#39;Colorado&#39;</span>,\n      <span class="hljs-string">&#39;Connecticut&#39;</span>,\n      <span class="hljs-string">&#39;Delaware&#39;</span>,\n      <span class="hljs-string">&#39;Florida&#39;</span>,\n      <span class="hljs-string">&#39;Georgia&#39;</span>,\n      <span class="hljs-string">&#39;Hawaii&#39;</span>,\n      <span class="hljs-string">&#39;Idaho&#39;</span>,\n      <span class="hljs-string">&#39;Illinois&#39;</span>,\n      <span class="hljs-string">&#39;Indiana&#39;</span>,\n      <span class="hljs-string">&#39;Iowa&#39;</span>,\n      <span class="hljs-string">&#39;Kansas&#39;</span>,\n      <span class="hljs-string">&#39;Kentucky&#39;</span>,\n      <span class="hljs-string">&#39;Louisiana&#39;</span>,\n      <span class="hljs-string">&#39;Maine&#39;</span>,\n      <span class="hljs-string">&#39;Maryland&#39;</span>,\n      <span class="hljs-string">&#39;Massachusetts&#39;</span>,\n      <span class="hljs-string">&#39;Michigan&#39;</span>,\n      <span class="hljs-string">&#39;Minnesota&#39;</span>,\n      <span class="hljs-string">&#39;Mississippi&#39;</span>,\n      <span class="hljs-string">&#39;Missouri&#39;</span>,\n      <span class="hljs-string">&#39;Montana&#39;</span>,\n      <span class="hljs-string">&#39;Nebraska&#39;</span>,\n      <span class="hljs-string">&#39;Nevada&#39;</span>,\n      <span class="hljs-string">&#39;New Hampshire&#39;</span>,\n      <span class="hljs-string">&#39;New Jersey&#39;</span>,\n      <span class="hljs-string">&#39;New Mexico&#39;</span>,\n      <span class="hljs-string">&#39;New York&#39;</span>,\n      <span class="hljs-string">&#39;North Carolina&#39;</span>,\n      <span class="hljs-string">&#39;North Dakota&#39;</span>,\n      <span class="hljs-string">&#39;Ohio&#39;</span>,\n      <span class="hljs-string">&#39;Oklahoma&#39;</span>,\n      <span class="hljs-string">&#39;Oregon&#39;</span>,\n      <span class="hljs-string">&#39;Pennsylvania&#39;</span>,\n      <span class="hljs-string">&#39;Rhode Island&#39;</span>,\n      <span class="hljs-string">&#39;South Carolina&#39;</span>,\n      <span class="hljs-string">&#39;South Dakota&#39;</span>,\n      <span class="hljs-string">&#39;Tennessee&#39;</span>,\n      <span class="hljs-string">&#39;Texas&#39;</span>,\n      <span class="hljs-string">&#39;Utah&#39;</span>,\n      <span class="hljs-string">&#39;Vermont&#39;</span>,\n      <span class="hljs-string">&#39;Virginia&#39;</span>,\n      <span class="hljs-string">&#39;Washington&#39;</span>,\n      <span class="hljs-string">&#39;West Virginia&#39;</span>,\n      <span class="hljs-string">&#39;Wisconsin&#39;</span>,\n      <span class="hljs-string">&#39;Wyoming&#39;</span>,\n    ]\n\n    onMounted(<span class="hljs-function">() =&gt;</span> {\n      list = states.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> {\n        <span class="hljs-keyword">return</span> { <span class="hljs-attr">value</span>: <span class="hljs-string">`value:<span class="hljs-subst">${item}</span>`</span>, <span class="hljs-attr">label</span>: <span class="hljs-string">`label:<span class="hljs-subst">${item}</span>`</span> }\n      })\n    })\n    <span class="hljs-keyword">const</span> remoteMethod = <span class="hljs-function"><span class="hljs-params">query</span> =&gt;</span> {\n      <span class="hljs-keyword">if</span> (query !== <span class="hljs-string">&#39;&#39;</span>) {\n        loading.value = <span class="hljs-literal">true</span>\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          loading.value = <span class="hljs-literal">false</span>\n          options.value = list.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> {\n            <span class="hljs-keyword">return</span> item.label.toLowerCase().indexOf(query.toLowerCase()) &gt; -<span class="hljs-number">1</span>\n          })\n          options.value.push(<span class="hljs-string">&#39;a&#39;</span>)\n        }, <span class="hljs-number">200</span>)\n      } <span class="hljs-keyword">else</span> {\n        options.value = []\n      }\n    }\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      options,\n      list,\n      loading,\n      remoteMethod,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Es=v('<h3 id="select-attributes" data-source-line="593"><a class="markdownIt-Anchor" href="#select-attributes">#</a> Select Attributes</h3><table data-source-line="595"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value / v-model</td><td>绑定值</td><td>boolean / string / number</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>是否多选</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>value-key</td><td>作为 value 唯一标识的键名，绑定值为对象类型时必填</td><td>string</td><td>—</td><td>value</td></tr><tr><td>size</td><td>输入框尺寸</td><td>string</td><td>medium/small/mini</td><td>—</td></tr><tr><td>clearable</td><td>是否可以清空选项</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>collapse-tags</td><td>多选时是否将选中值按文字的形式展示</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>multiple-limit</td><td>多选时用户最多可以选择的项目数，为 0 则不限制</td><td>number</td><td>—</td><td>0</td></tr><tr><td>name</td><td>select input 的 name 属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>autocomplete</td><td>select input 的 autocomplete 属性</td><td>string</td><td>—</td><td>off</td></tr><tr><td>auto-complete</td><td>下个主版本弃用</td><td>string</td><td>—</td><td>off</td></tr><tr><td>placeholder</td><td>占位符</td><td>string</td><td>—</td><td>请选择</td></tr><tr><td>filterable</td><td>是否可搜索</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>allow-create</td><td>是否允许用户创建新条目，需配合 <code>filterable</code> 使用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>filter-method</td><td>自定义搜索方法</td><td>function</td><td>—</td><td>—</td></tr><tr><td>remote</td><td>是否为远程搜索</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>remote-method</td><td>远程搜索方法</td><td>function</td><td>—</td><td>—</td></tr><tr><td>loading</td><td>是否正在从远程获取数据</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>loading-text</td><td>远程加载时显示的文字</td><td>string</td><td>—</td><td>加载中</td></tr><tr><td>no-match-text</td><td>搜索条件无匹配时显示的文字，也可以使用<code>#empty</code>设置</td><td>string</td><td>—</td><td>无匹配数据</td></tr><tr><td>no-data-text</td><td>选项为空时显示的文字，也可以使用<code>#empty</code>设置</td><td>string</td><td>—</td><td>无数据</td></tr><tr><td>popper-class</td><td>Select 下拉框的类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>reserve-keyword</td><td>多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>popper-append-to-body</td><td>是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>automatic-dropdown</td><td>对于不可搜索的 Select，是否在输入框获得焦点后自动弹出选项菜单</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>clear-icon</td><td>自定义清空图标的类名</td><td>string</td><td>—</td><td>rol-icon-circle-close</td></tr></tbody></table><h3 id="select-events" data-source-line="624"><a class="markdownIt-Anchor" href="#select-events">#</a> Select Events</h3><table data-source-line="626"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>选中值发生变化时触发</td><td>目前的选中值</td></tr><tr><td>visible-change</td><td>下拉框出现/隐藏时触发</td><td>出现则为 true，隐藏则为 false</td></tr><tr><td>remove-tag</td><td>多选模式下移除 tag 时触发</td><td>移除的 tag 值</td></tr><tr><td>clear</td><td>可清空的单选模式下用户点击清空按钮时触发</td><td>—</td></tr><tr><td>blur</td><td>当 input 失去焦点时触发</td><td>(event: Event)</td></tr><tr><td>focus</td><td>当 input 获得焦点时触发</td><td>(event: Event)</td></tr></tbody></table><h3 id="select-slots" data-source-line="635"><a class="markdownIt-Anchor" href="#select-slots">#</a> Select Slots</h3><table data-source-line="637"><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>Option 组件列表</td></tr><tr><td>prefix</td><td>Select 组件头部内容</td></tr><tr><td>empty</td><td>无选项时的列表</td></tr></tbody></table><h3 id="option-group-attributes" data-source-line="643"><a class="markdownIt-Anchor" href="#option-group-attributes">#</a> Option Group Attributes</h3><table data-source-line="645"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>分组的组名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否将该分组下所有选项置为禁用</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="option-attributes" data-source-line="650"><a class="markdownIt-Anchor" href="#option-attributes">#</a> Option Attributes</h3><table data-source-line="652"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value</td><td>选项的值</td><td>string/number/object</td><td>—</td><td>—</td></tr><tr><td>label</td><td>选项的标签，若不设置则默认与 <code>value</code> 相同</td><td>string/number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用该选项</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="methods" data-source-line="658"><a class="markdownIt-Anchor" href="#methods">#</a> Methods</h3><table data-source-line="660"><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 input 获取焦点</td><td>-</td></tr><tr><td>blur</td><td>使 input 失去焦点，并隐藏下拉框</td><td>-</td></tr></tbody></table>',12);H.render=function(s,a,e,p,c,d){const h=l("vdpv_0"),i=l("vdpv_1"),u=l("vdpv_2"),j=l("vdpv_3"),v=l("vdpv_4"),g=l("vdpv_5"),m=l("vdpv_6"),b=l("vdpv_7"),f=l("vdpv_8"),_=l("vdpv_9");return n(),t("div",R,[C,M,I,o("div",S,[o("div",O,[o("div",U,[o(h)]),o("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[o("div",z,[T],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},r(s.vdpv_0Height>0?"hidden":"show"),1)])]),D,W,L,o("div",G,[o("div",F,[o("div",$,[o(i)]),o("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[o("div",E,[K],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},r(s.vdpv_1Height>0?"hidden":"show"),1)])]),B,J,P,o("div",Y,[o("div",Q,[o("div",X,[o(u)]),o("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[o("div",Z,[ss],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},r(s.vdpv_2Height>0?"hidden":"show"),1)])]),as,o("div",ls,[o("div",ns,[o("div",ts,[o(j)]),o("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[o("div",es,[ps],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},r(s.vdpv_3Height>0?"hidden":"show"),1)])]),cs,o("div",os,[o("div",rs,[o("div",ds,[o(v)]),o("div",{style:{height:s.vdpv_4Height},class:"vuedoc-demo__source"},[o("div",hs,[is],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},r(s.vdpv_4Height>0?"hidden":"show"),1)])]),us,o("div",js,[o("div",vs,[o("div",gs,[o(g)]),o("div",{style:{height:s.vdpv_5Height},class:"vuedoc-demo__source"},[o("div",ms,[bs],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(5))},r(s.vdpv_5Height>0?"hidden":"show"),1)])]),fs,o("div",_s,[o("div",ys,[o("div",ks,[o(m)]),o("div",{style:{height:s.vdpv_6Height},class:"vuedoc-demo__source"},[o("div",qs,[ws],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(6))},r(s.vdpv_6Height>0?"hidden":"show"),1)])]),xs,o("div",Vs,[o("div",Ns,[o("div",As,[o(b)]),o("div",{style:{height:s.vdpv_7Height},class:"vuedoc-demo__source"},[o("div",Hs,[Rs],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[8]||(a[8]=a=>s.toggleCode(7))},r(s.vdpv_7Height>0?"hidden":"show"),1)])]),Cs,Ms,Is,o("div",Ss,[o("div",Os,[o("div",Us,[o(f)]),o("div",{style:{height:s.vdpv_8Height},class:"vuedoc-demo__source"},[o("div",zs,[Ts],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[9]||(a[9]=a=>s.toggleCode(8))},r(s.vdpv_8Height>0?"hidden":"show"),1)])]),Ds,o("div",Ws,[o("div",Ls,[o("div",Gs,[o(_)]),o("div",{style:{height:s.vdpv_9Height},class:"vuedoc-demo__source"},[o("div",Fs,[$s],512)],4),o("div",{class:"vuedoc-demo__footer",onClick:a[10]||(a[10]=a=>s.toggleCode(9))},r(s.vdpv_9Height>0?"hidden":"show"),1)])]),Es])};export default H;
