$notification-background-color: $background !default;
$notification-code-background-color: $scheme-main !default;
$notification-radius: $radius !default;
$notification-padding: 1rem 1.5.5rem 1rem 1.5rem !default;
$notification-padding-ltr: 1rem 1.5rem 1rem 1rem !default;
$notification-padding-rtl: 1rem 1rem 1rem 1.5rem !default;
$notification-width: 330px !default;
$notification-colors: $colors !default;

@include bem(notification) {
  @extend %block;
  width: $notification-width;
  background-color: $notification-background-color;
  border-radius: $notification-radius;
  position: fixed;
  transition: opacity 0.3s, transform 0.3s, left 0.3s, right 0.3s, top 0.4s, bottom 0.3s;
  overflow: hidden;
  z-index: $index-top;

  &.right {
    right: 16px;
  }

  &.left {
    left: 16px;
  }
  @include ltr {
    padding: $notification-padding-ltr;
  }

  @include rtl {
    padding: $notification-padding-rtl;
  }
  a:not(.button):not(.dropdown-item) {
    color: currentColor;
    text-decoration: underline;
  }

  @include e(content) {
    margin: 0;
    font-size: $size-small;
  }

  @include e(title) {
    font-weight: bold;
    font-size: $size-normal;
    margin: 0;
    margin-bottom: 0.5em;
  }

  strong {
    color: currentColor;
  }
  code,
  pre {
    background: $notification-code-background-color;
  }
  pre code {
    background: transparent;
  }
  & > .delete {
    @include ltr-position(0.5rem);
    position: absolute;
    top: 0.5rem;
    @extend %delete;
  }

  .title,
  .subtitle,
  .content {
    color: currentColor;
  }
  // Colors
  @each $name, $pair in $notification-colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    &.is-#{$name} {
      background-color: $color;
      color: $color-invert;
      // If light and dark colors are provided
      @if length($pair) >= 4 {
        $color-light: nth($pair, 3);
        $color-dark: nth($pair, 4);
        &.is-light {
          background-color: $color-light;
          color: $color-dark;
        }
      }
    }
  }
}
