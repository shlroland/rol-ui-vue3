@import './initial-variables';

@mixin clearfix {
  &::after {
    clear: both;
    content: ' ';
    display: table;
  }
}

@mixin center($width, $height: 0) {
  position: absolute;
  @if $height != 0 {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$height} / 2));
  } @else {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$width} / 2));
  }
}

@mixin fa($size, $dimensions) {
  display: inline-block;
  height: $dimensions;
  width: $dimensions;
  line-height: $dimensions;
  font-size: $size;
  text-align: center;
  vertical-align: top;
}

@mixin hamburger($dimensions) {
  cursor: pointer;
  display: block;
  height: $dimensions;
  position: relative;
  width: $dimensions;
  span {
    background-color: currentColor;
  }
}

@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

%unselectable {
  @include unselectable;
}

@keyframes spinAround {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

@mixin loader {
  animation: spinAround 500ms infinite linear;
  border: 2px solid $grey-lighter;
  border-radius: $radius-rounded;
  border-right-color: transparent;
  border-top-color: transparent;
  content: '';
  display: block;
  height: 1em;
  position: relative;
  width: 1em;
}

%loader {
  @include loader;
}

@mixin ltr {
  @if not $rtl {
    @content;
  }
}

@mixin rtl {
  @if $rtl {
    @content;
  }
}

@mixin ltr-property($property, $spacing, $right: true) {
  $normal: if($right, 'right', 'left');
  $opposite: if($right, 'left', 'right');
  @if $rtl {
    #{$property}-#{$opposite}: $spacing;
  } @else {
    #{$property}-#{$normal}: $spacing;
  }
}
