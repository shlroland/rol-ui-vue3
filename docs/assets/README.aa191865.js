var s=Object.assign;import{g as a,r as t,o as n,c as l,a as p,w as e,F as d,b as c,f as o,h as r,t as h,i as u,j as i}from"./index.e2306e92.js";const j={setup:()=>({input:a("")})};j.render=function(s,a,p,e,d,c){const o=t("rol-input");return n(),l(o,{modelValue:e.input,"onUpdate:modelValue":a[1]||(a[1]=s=>e.input=s),placeholder:"请输入内容"},null,8,["modelValue"])};const g={setup:()=>({input:a("")})};g.render=function(s,a,p,e,d,c){const o=t("rol-input");return n(),l(o,{placeholder:"请输入内容",modelValue:e.input,"onUpdate:modelValue":a[1]||(a[1]=s=>e.input=s),disabled:""},null,8,["modelValue"])};const m={setup:()=>({input:a("")})};m.render=function(s,a,p,e,d,c){const o=t("rol-input");return n(),l(o,{modelValue:e.input,"onUpdate:modelValue":a[1]||(a[1]=s=>e.input=s),placeholder:"请输入内容",clearable:""},null,8,["modelValue"])};const v={setup:()=>({input:a("")})};v.render=function(s,a,p,e,d,c){const o=t("rol-input");return n(),l(o,{modelValue:e.input,"onUpdate:modelValue":a[1]||(a[1]=s=>e.input=s),placeholder:"请输入密码","show-password":""},null,8,["modelValue"])};const _={setup:()=>({input1:a(""),input2:a(""),input3:a(""),input4:a("")})},f=p("h5",null,"属性添加",-1),q=p("h5",null,"slot添加",-1);_.render=function(s,a,c,o,r,h){const u=t("rol-input"),i=t("rol-icon");return n(),l(d,null,[f,p(u,{modelValue:o.input1,"onUpdate:modelValue":a[1]||(a[1]=s=>o.input1=s),placeholder:"请输入优先级","suffix-icon":"sort-amount-up"},null,8,["modelValue"]),p(u,{modelValue:o.input2,"onUpdate:modelValue":a[2]||(a[2]=s=>o.input2=s),placeholder:"请输入内容","prefix-icon":"search"},null,8,["modelValue"]),q,p(u,{modelValue:o.input3,"onUpdate:modelValue":a[3]||(a[3]=s=>o.input3=s),placeholder:"请输入优先级"},{suffix:e((()=>[p(i,{class:"rol-input__icon",name:"sort-amount-up"})])),_:1},8,["modelValue"]),p(u,{modelValue:o.input4,"onUpdate:modelValue":a[4]||(a[4]=s=>o.input4=s),placeholder:"请输入内容"},{prefix:e((()=>[p(i,{class:"rol-input__icon",name:"search"})])),_:1},8,["modelValue"])],64)};const w={setup:()=>({textarea:a("")})};w.render=function(s,a,p,e,d,c){const o=t("rol-input");return n(),l(o,{type:"textarea",rows:2,placeholder:"请输入内容",modelValue:e.textarea,"onUpdate:modelValue":a[1]||(a[1]=s=>e.textarea=s)},null,8,["modelValue"])};const y={setup:()=>({textarea1:a(""),textarea2:a("")})};y.render=function(s,a,e,c,o,r){const h=t("rol-input"),u=t("rol-divider");return n(),l(d,null,[p(h,{type:"textarea",autosize:"",placeholder:"请输入内容",modelValue:c.textarea1,"onUpdate:modelValue":a[1]||(a[1]=s=>c.textarea1=s)},null,8,["modelValue"]),p(u),p(h,{type:"textarea",autosize:{minRows:2,maxRows:4},placeholder:"请输入内容",modelValue:c.textarea2,"onUpdate:modelValue":a[2]||(a[2]=s=>c.textarea2=s)},null,8,["modelValue"])],64)};const x={setup:()=>({input1:a(""),input2:a(""),input3:a(""),select:a("")})},k=c("Http://"),b=c(".com");x.render=function(s,a,c,o,r,h){const u=t("rol-input"),i=t("rol-divider"),j=t("rol-select-option"),g=t("rol-select"),m=t("rol-button");return n(),l(d,null,[p(u,{placeholder:"请输入内容",modelValue:o.input1,"onUpdate:modelValue":a[1]||(a[1]=s=>o.input1=s)},{prepend:e((()=>[k])),_:1},8,["modelValue"]),p(i),p(u,{placeholder:"请输入内容",modelValue:o.input2,"onUpdate:modelValue":a[2]||(a[2]=s=>o.input2=s)},{append:e((()=>[b])),_:1},8,["modelValue"]),p(i),p(u,{placeholder:"请输入内容",modelValue:o.input3,"onUpdate:modelValue":a[4]||(a[4]=s=>o.input3=s),class:"input-with-select"},{prepend:e((()=>[p(g,{style:{width:"150px"},modelValue:o.select,"onUpdate:modelValue":a[3]||(a[3]=s=>o.select=s),placeholder:"请选择"},{default:e((()=>[p(j,{label:"餐厅名",value:"1"}),p(j,{label:"订单号",value:"2"}),p(j,{label:"用户电话",value:"3"})])),_:1},8,["modelValue"])])),append:e((()=>[p(m,{icon:"search"})])),_:1},8,["modelValue"])],64)};const V={setup:()=>({input1:a(""),input2:a(""),input3:a(""),input4:a("")})};V.render=function(s,a,e,c,o,r){const h=t("rol-input");return n(),l(d,null,[p(h,{placeholder:"请输入内容",modelValue:c.input1,"onUpdate:modelValue":a[1]||(a[1]=s=>c.input1=s)},null,8,["modelValue"]),p(h,{size:"medium",placeholder:"请输入内容",modelValue:c.input2,"onUpdate:modelValue":a[2]||(a[2]=s=>c.input2=s)},null,8,["modelValue"]),p(h,{size:"small",placeholder:"请输入内容",modelValue:c.input3,"onUpdate:modelValue":a[3]||(a[3]=s=>c.input3=s)},null,8,["modelValue"]),p(h,{size:"mini",placeholder:"请输入内容",modelValue:c.input4,"onUpdate:modelValue":a[4]||(a[4]=s=>c.input4=s)},null,8,["modelValue"])],64)};const H=o({components:{vdpv_0:j,vdpv_1:g,vdpv_2:m,vdpv_3:v,vdpv_4:_,vdpv_5:w,vdpv_6:y,vdpv_7:x,vdpv_8:V},setup(t){const n=a(),l=a(),p=a(),e=a(),d=a(),c=a(),o=a(),u=a(),i=a(),j=[n,l,p,e,d,c,o,u,i],g=r({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px",vdpv_4Height:"0px",vdpv_5Height:"0px",vdpv_6Height:"0px",vdpv_7Height:"0px",vdpv_8Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===g[a+"Height"]?g[a+"Height"]=((j[s].value?j[s].value.offsetHeight:0)||0)+"px":g[a+"Height"]="0px"}},h(g)),{vdpv_0Ref:n,vdpv_1Ref:l,vdpv_2Ref:p,vdpv_3Ref:e,vdpv_4Ref:d,vdpv_5Ref:c,vdpv_6Ref:o,vdpv_7Ref:u,vdpv_8Ref:i})}});H.$vd={matter:{title:"Input",description:"Input component doc",wrapperClass:"input-wrapper-class",tags:["components","form"]},toc:[{content:"Input 输入框",anchor:"input-输入框",level:1},{content:"基础用法",anchor:"基础用法",level:2},{content:"禁用状态",anchor:"禁用状态",level:2},{content:"可清空",anchor:"可清空",level:2},{content:"密码框",anchor:"密码框",level:2},{content:"带 icon 的输入框",anchor:"带-icon-的输入框",level:2},{content:"文本域",anchor:"文本域",level:2},{content:"可自适应文本高度的文本域",anchor:"可自适应文本高度的文本域",level:2},{content:"复合型输入框",anchor:"复合型输入框",level:2},{content:"尺寸",anchor:"尺寸",level:2},{content:"Input Attributes",anchor:"input-attributes",level:3},{content:"Input Slots",anchor:"input-slots",level:3},{content:"Input Events",anchor:"input-events",level:3},{content:"Input Methods",anchor:"input-methods",level:3}]};const I=H,R={class:"vuedoc  input-wrapper-class"},C=i('<h1 id="input-输入框" data-source-line="2"><a class="markdownIt-Anchor" href="#input-输入框">#</a> Input 输入框</h1><p data-source-line="4">通过鼠标或键盘输入字符</p><h2 id="基础用法" data-source-line="6"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h2><pre style="display:none;"></pre>',4),U={class:"vuedoc-demo "},z={class:"vuedoc-demo__inner"},A={class:"vuedoc-demo__preview"},E={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},M=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),S=p("h2",{id:"禁用状态","data-source-line":"25"},[p("a",{class:"markdownIt-Anchor",href:"#禁用状态"},"#"),c(" 禁用状态")],-1),F=p("p",{"data-source-line":"27"},[c("通过 "),p("code",null,"disabled"),c(" 属性指定是否禁用 input 组件。")],-1),L=p("pre",{style:{display:"none"}},null,-1),O={class:"vuedoc-demo "},T={class:"vuedoc-demo__inner"},W={class:"vuedoc-demo__preview"},$={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},B=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),D=p("h2",{id:"可清空","data-source-line":"46"},[p("a",{class:"markdownIt-Anchor",href:"#可清空"},"#"),c(" 可清空")],-1),G=p("p",{"data-source-line":"48"},[c("使用"),p("code",null,"clearable"),c("属性即可得到一个可清空的输入框")],-1),J=p("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},N={class:"vuedoc-demo__inner"},P={class:"vuedoc-demo__preview"},Q={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},X=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">clearable</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Y=p("h2",{id:"密码框","data-source-line":"67"},[p("a",{class:"markdownIt-Anchor",href:"#密码框"},"#"),c(" 密码框")],-1),Z=p("p",{"data-source-line":"69"},[c("使用"),p("code",null,"show-password"),c("属性即可得到一个可切换显示隐藏的密码框")],-1),ss=p("pre",{style:{display:"none"}},null,-1),as={class:"vuedoc-demo "},ts={class:"vuedoc-demo__inner"},ns={class:"vuedoc-demo__preview"},ls={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},ps=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span> <span class="hljs-attr">show-password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),es=p("h2",{id:"带-icon-的输入框","data-source-line":"88"},[p("a",{class:"markdownIt-Anchor",href:"#带-icon-的输入框"},"#"),c(" 带 icon 的输入框")],-1),ds=p("p",{"data-source-line":"90"},[c("可以通过 "),p("code",null,"prefix-icon"),c(" 和 "),p("code",null,"suffix-icon"),c(" 属性在 input 组件首部和尾部增加显示图标，也可以通过 slot 来放置图标。")],-1),cs=p("pre",{style:{display:"none"}},null,-1),os={class:"vuedoc-demo "},rs={class:"vuedoc-demo__inner"},hs={class:"vuedoc-demo__preview"},us={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},is=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>属性添加<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input1&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入优先级&quot;</span> <span class="hljs-attr">suffix-icon</span>=<span class="hljs-string">&quot;sort-amount-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">prefix-icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>slot添加<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input3&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入优先级&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">suffix</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;rol-input__icon&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sort-amount-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input4&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prefix</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;rol-input__icon&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input1</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input2</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input3</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input4</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),js=p("h2",{id:"文本域","data-source-line":"125"},[p("a",{class:"markdownIt-Anchor",href:"#文本域"},"#"),c(" 文本域")],-1),gs=p("p",{"data-source-line":"127"},[c("用于输入多行文本信息，通过将 "),p("code",null,"type"),c(" 属性的值指定为 textarea。"),p("br"),c(" 文本域高度可通过 "),p("code",null,"rows"),c(" 属性控制")],-1),ms=p("pre",{style:{display:"none"}},null,-1),vs={class:"vuedoc-demo "},_s={class:"vuedoc-demo__inner"},fs={class:"vuedoc-demo__preview"},qs={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},ws=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span> <span class="hljs-attr">:rows</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;textarea&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">textarea</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),ys=p("h2",{id:"可自适应文本高度的文本域","data-source-line":"147"},[p("a",{class:"markdownIt-Anchor",href:"#可自适应文本高度的文本域"},"#"),c(" 可自适应文本高度的文本域")],-1),xs=p("p",{"data-source-line":"149"},[c("通过设置 "),p("code",null,"autosize"),c(" 属性可以使得文本域的高度能够根据文本内容自动进行调整， 并且 "),p("code",null,"autosize"),c(" 还可以设定为一个对象，指定最小行数和最大行数。")],-1),ks=p("pre",{style:{display:"none"}},null,-1),bs={class:"vuedoc-demo "},Vs={class:"vuedoc-demo__inner"},Hs={class:"vuedoc-demo__preview"},Is={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},Rs=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span> <span class="hljs-attr">autosize</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;textarea1&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-divider</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span> <span class="hljs-attr">:autosize</span>=<span class="hljs-string">&quot;{ minRows: 2, maxRows: 4 }&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;textarea2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">textarea1</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">textarea2</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Cs=p("h2",{id:"复合型输入框","data-source-line":"173"},[p("a",{class:"markdownIt-Anchor",href:"#复合型输入框"},"#"),c(" 复合型输入框")],-1),Us=p("p",{"data-source-line":"175"},"可前置或后置元素，一般为标签或按钮",-1),zs=p("pre",{style:{display:"none"}},null,-1),As={class:"vuedoc-demo "},Es={class:"vuedoc-demo__inner"},Ms={class:"vuedoc-demo__preview"},Ss={ref:"vdpv_7Ref",class:"vuedoc-demo__sourceref"},Fs=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input1&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prepend</span>&gt;</span>Http://<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-divider</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>.com<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-divider</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input-with-select&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prepend</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-select</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 150px&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;餐厅名&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;订单号&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">rol-select-option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户电话&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-select-option</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">rol-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input1</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input2</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input3</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">select</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Ls=p("h2",{id:"尺寸","data-source-line":"216"},[p("a",{class:"markdownIt-Anchor",href:"#尺寸"},"#"),c(" 尺寸")],-1),Os=p("p",{"data-source-line":"218"},[c("可通过 "),p("code",null,"size"),c(" 属性指定输入框的尺寸，除了默认的大小外，还提供了 large、small 和 mini 三种尺寸。")],-1),Ts=p("pre",{style:{display:"none"}},null,-1),Ws={class:"vuedoc-demo "},$s={class:"vuedoc-demo__inner"},Bs={class:"vuedoc-demo__preview"},Ds={ref:"vdpv_8Ref",class:"vuedoc-demo__sourceref"},Gs=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input1&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input2&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input3&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-input</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;input4&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rol-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">input1</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input2</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input3</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n      <span class="hljs-attr">input4</span>: ref(<span class="hljs-string">&#39;&#39;</span>),\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),Js=i('<h3 id="input-attributes" data-source-line="243"><a class="markdownIt-Anchor" href="#input-attributes">#</a> Input Attributes</h3><table data-source-line="245"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>类型</td><td>string</td><td>text，textarea 和其他 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types">原生 input 的 type 值</a></td><td>text</td></tr><tr><td>value / v-model</td><td>绑定值</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>maxlength</td><td>原生属性，最大输入长度</td><td>number</td><td>—</td><td>—</td></tr><tr><td>minlength</td><td>原生属性，最小输入长度</td><td>number</td><td>—</td><td>—</td></tr><tr><td>show-word-limit</td><td>是否显示输入字数统计，只在 <code>type = &quot;text&quot;</code> 或 <code>type = &quot;textarea&quot;</code> 时有效</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>placeholder</td><td>输入框占位文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>是否可清空</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-password</td><td>是否显示切换密码图标</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>输入框尺寸，只在 <code>type!=&quot;textarea&quot;</code> 时有效</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>prefix-icon</td><td>输入框头部图标</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>输入框尾部图标</td><td>string</td><td>—</td><td>—</td></tr><tr><td>rows</td><td>输入框行数，只对 <code>type=&quot;textarea&quot;</code> 有效</td><td>number</td><td>—</td><td>2</td></tr><tr><td>autosize</td><td>自适应内容高度，只对 <code>type=&quot;textarea&quot;</code> 有效，可传入对象，如，{ minRows: 2, maxRows: 6 }</td><td>boolean / object</td><td>—</td><td>false</td></tr><tr><td>autocomplete</td><td>原生属性，自动补全</td><td>string</td><td>on, off</td><td>off</td></tr><tr><td>auto-complete</td><td>下个主版本弃用</td><td>string</td><td>on, off</td><td>off</td></tr><tr><td>name</td><td>原生属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>原生属性，是否只读</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>max</td><td>原生属性，设置最大值</td><td>—</td><td>—</td><td>—</td></tr><tr><td>min</td><td>原生属性，设置最小值</td><td>—</td><td>—</td><td>—</td></tr><tr><td>step</td><td>原生属性，设置输入字段的合法数字间隔</td><td>—</td><td>—</td><td>—</td></tr><tr><td>resize</td><td>控制是否能被用户缩放</td><td>string</td><td>none, both, horizontal, vertical</td><td>—</td></tr><tr><td>autofocus</td><td>原生属性，自动获取焦点</td><td>boolean</td><td>true, false</td><td>false</td></tr><tr><td>form</td><td>原生属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>输入框关联的 label 文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tabindex</td><td>输入框的 tabindex</td><td>string</td><td>-</td><td>-</td></tr></tbody></table><h3 id="input-slots" data-source-line="274"><a class="markdownIt-Anchor" href="#input-slots">#</a> Input Slots</h3><table data-source-line="276"><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>prefix</td><td>输入框头部内容，只对 <code>type=&quot;text&quot;</code> 有效</td></tr><tr><td>suffix</td><td>输入框尾部内容，只对 <code>type=&quot;text&quot;</code> 有效</td></tr><tr><td>prepend</td><td>输入框前置内容，只对 <code>type=&quot;text&quot;</code> 有效</td></tr><tr><td>append</td><td>输入框后置内容，只对 <code>type=&quot;text&quot;</code> 有效</td></tr></tbody></table><h3 id="input-events" data-source-line="283"><a class="markdownIt-Anchor" href="#input-events">#</a> Input Events</h3><table data-source-line="285"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>blur</td><td>在 Input 失去焦点时触发</td><td>(event: Event)</td></tr><tr><td>focus</td><td>在 Input 获得焦点时触发</td><td>(event: Event)</td></tr><tr><td>change</td><td>仅在输入框失去焦点或用户按下回车时触发</td><td>(value: string | number)</td></tr><tr><td>input</td><td>在 Input 值改变时触发</td><td>(value: string | number)</td></tr><tr><td>clear</td><td>在点击由 <code>clearable</code> 属性生成的清空按钮时触发</td><td>—</td></tr></tbody></table><h3 id="input-methods" data-source-line="293"><a class="markdownIt-Anchor" href="#input-methods">#</a> Input Methods</h3><table data-source-line="295"><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 input 获取焦点</td><td>—</td></tr><tr><td>blur</td><td>使 input 失去焦点</td><td>—</td></tr><tr><td>select</td><td>选中 input 中的文字</td><td>—</td></tr></tbody></table>',8);I.render=function(s,a,e,d,c,o){const r=t("vdpv_0"),h=t("vdpv_1"),i=t("vdpv_2"),j=t("vdpv_3"),g=t("vdpv_4"),m=t("vdpv_5"),v=t("vdpv_6"),_=t("vdpv_7"),f=t("vdpv_8");return n(),l("div",R,[C,p("div",U,[p("div",z,[p("div",A,[p(r)]),p("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[p("div",E,[M],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},u(s.vdpv_0Height>0?"hidden":"show"),1)])]),S,F,L,p("div",O,[p("div",T,[p("div",W,[p(h)]),p("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[p("div",$,[B],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},u(s.vdpv_1Height>0?"hidden":"show"),1)])]),D,G,J,p("div",K,[p("div",N,[p("div",P,[p(i)]),p("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[p("div",Q,[X],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},u(s.vdpv_2Height>0?"hidden":"show"),1)])]),Y,Z,ss,p("div",as,[p("div",ts,[p("div",ns,[p(j)]),p("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[p("div",ls,[ps],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},u(s.vdpv_3Height>0?"hidden":"show"),1)])]),es,ds,cs,p("div",os,[p("div",rs,[p("div",hs,[p(g)]),p("div",{style:{height:s.vdpv_4Height},class:"vuedoc-demo__source"},[p("div",us,[is],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},u(s.vdpv_4Height>0?"hidden":"show"),1)])]),js,gs,ms,p("div",vs,[p("div",_s,[p("div",fs,[p(m)]),p("div",{style:{height:s.vdpv_5Height},class:"vuedoc-demo__source"},[p("div",qs,[ws],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(5))},u(s.vdpv_5Height>0?"hidden":"show"),1)])]),ys,xs,ks,p("div",bs,[p("div",Vs,[p("div",Hs,[p(v)]),p("div",{style:{height:s.vdpv_6Height},class:"vuedoc-demo__source"},[p("div",Is,[Rs],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(6))},u(s.vdpv_6Height>0?"hidden":"show"),1)])]),Cs,Us,zs,p("div",As,[p("div",Es,[p("div",Ms,[p(_)]),p("div",{style:{height:s.vdpv_7Height},class:"vuedoc-demo__source"},[p("div",Ss,[Fs],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[8]||(a[8]=a=>s.toggleCode(7))},u(s.vdpv_7Height>0?"hidden":"show"),1)])]),Ls,Os,Ts,p("div",Ws,[p("div",$s,[p("div",Bs,[p(f)]),p("div",{style:{height:s.vdpv_8Height},class:"vuedoc-demo__source"},[p("div",Ds,[Gs],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:a[9]||(a[9]=a=>s.toggleCode(8))},u(s.vdpv_8Height>0?"hidden":"show"),1)])]),Js])};export default I;
