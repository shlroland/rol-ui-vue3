var s=Object.assign;import{r as a,o as n,c as l,w as t,a as p,F as c,k as e,b as r,i as o,f as d,g as h,h as i,t as j,j as g}from"./index.3a81c8ea.js";const u={data:()=>({circleUrl:"https://i.loli.net/2020/12/29/9PrEtmqQuHcGzi2.png",squareUrl:"https://i.loli.net/2020/12/29/lfd9RzsFKX7k18Q.png",sizeList:["large","medium","small"]})},v=p("div",{class:"sub-title"},"circle",-1),m={class:"demo-basic--circle"},q={class:"block"},f=p("div",{class:"sub-title"},"square",-1),_={class:"demo-basic--circle"},b={class:"block"};u.render=function(s,r,o,d,h,i){const j=a("rol-avatar"),g=a("rol-col"),u=a("rol-row");return n(),l(u,{class:"demo-avatar demo-basic"},{default:t((()=>[p(g,{span:12},{default:t((()=>[v,p("div",m,[p("div",q,[p(j,{size:50,src:h.circleUrl},null,8,["src"])]),(n(!0),l(c,null,e(h.sizeList,(s=>(n(),l("div",{class:"block",key:s},[p(j,{size:s,src:h.circleUrl},null,8,["size","src"])])))),128))])])),_:1}),p(g,{span:12},{default:t((()=>[f,p("div",_,[p("div",b,[p(j,{shape:"square",size:50,src:h.squareUrl},null,8,["src"])]),(n(!0),l(c,null,e(h.sizeList,(s=>(n(),l("div",{class:"block",key:s},[p(j,{shape:"square",size:s,src:h.squareUrl},null,8,["size","src"])])))),128))])])),_:1})])),_:1})};const k={},y=r("user");k.render=function(s,c){const e=a("rol-avatar"),r=a("rol-col"),o=a("rol-row");return n(),l(o,{class:"demo-type"},{default:t((()=>[p(r,{span:8},{default:t((()=>[p(e,{icon:"user"})])),_:1}),p(r,{span:8},{default:t((()=>[p(e,{src:"https://i.loli.net/2020/12/29/5kcoKlfEpVNraPm.png","background-color":"#fff"})])),_:1}),p(r,{span:8},{default:t((()=>[p(e,null,{default:t((()=>[y])),_:1})])),_:1})])),_:1})};const w={methods:{errorHandler:()=>!0}},z={class:"demo-type"},H=p("img",{src:"https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png"},null,-1);w.render=function(s,c,e,r,o,d){const h=a("rol-avatar");return n(),l("div",z,[p(h,{size:60,src:"https://empty",onError:d.errorHandler},{default:t((()=>[H])),_:1},8,["onError"])])};const x={data:()=>({fits:["fill","contain","cover","none","scale-down"],url:"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg"})},A={class:"demo-fit"},U={class:"title"};x.render=function(s,t,r,d,h,i){const j=a("rol-avatar");return n(),l("div",A,[(n(!0),l(c,null,e(h.fits,(s=>(n(),l("div",{class:"block",key:s},[p("div",U,o(s),1),p(j,{shape:"square",size:100,fit:s,src:h.url},null,8,["fit","src"])])))),128))])};const C=d({components:{vdpv_0:u,vdpv_1:k,vdpv_2:w,vdpv_3:x},setup(a){const n=h(),l=h(),t=h(),p=h(),c=[n,l,t,p],e=i({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===e[a+"Height"]?e[a+"Height"]=((c[s].value?c[s].value.offsetHeight:0)||0)+"px":e[a+"Height"]="0px"}},j(e)),{vdpv_0Ref:n,vdpv_1Ref:l,vdpv_2Ref:t,vdpv_3Ref:p})}});C.$vd={matter:{title:"Avatar",description:"Avatar component doc",wrapperClass:"avatar-demo-wrapper",tags:["components","data"]},toc:[{content:"Avatar 头像",anchor:"avatar-头像",level:1},{content:"基本用法",anchor:"基本用法",level:2},{content:"展示类型",anchor:"展示类型",level:3},{content:"图片加载失败的 fallback 行为",anchor:"图片加载失败的-fallback-行为",level:2},{content:"图片如何适应容器框",anchor:"图片如何适应容器框",level:2},{content:"Attributes",anchor:"attributes",level:3},{content:"Events",anchor:"events",level:3},{content:"Slot",anchor:"slot",level:3}]};const R=C,E={class:"vuedoc  avatar-demo-wrapper"},I=g('<h1 id="avatar-头像" data-source-line="2"><a class="markdownIt-Anchor" href="#avatar-头像">#</a> Avatar 头像</h1><p data-source-line="4">用来代表用户或事物，支持图片、图标或字符展示。</p><h2 id="基本用法" data-source-line="6"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h2><p data-source-line="8">通过 <code>shape</code> 和 <code>size</code> 设置头像的形状和大小。</p><pre style="display:none;"></pre>',5),L={class:"vuedoc-demo "},S={class:"vuedoc-demo__inner"},K={class:"vuedoc-demo__preview"},P={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},Q=g('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-avatar demo-basic&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-col</span> <span class="hljs-attr">:span</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sub-title&quot;</span>&gt;</span>circle<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-basic--circle&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;circleUrl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;size in sizeList&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;size&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;size&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;circleUrl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-col</span> <span class="hljs-attr">:span</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sub-title&quot;</span>&gt;</span>square<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-basic--circle&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;squareUrl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;size in sizeList&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;size&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;size&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;squareUrl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">circleUrl</span>: <span class="hljs-string">&#39;https://i.loli.net/2020/12/29/9PrEtmqQuHcGzi2.png&#39;</span>,\n      <span class="hljs-attr">squareUrl</span>: <span class="hljs-string">&#39;https://i.loli.net/2020/12/29/lfd9RzsFKX7k18Q.png&#39;</span>,\n      <span class="hljs-attr">sizeList</span>: [<span class="hljs-string">&#39;large&#39;</span>, <span class="hljs-string">&#39;medium&#39;</span>, <span class="hljs-string">&#39;small&#39;</span>],\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),F=p("h3",{id:"展示类型","data-source-line":"51"},[p("a",{class:"markdownIt-Anchor",href:"#展示类型"},"#"),r(" 展示类型")],-1),G=p("p",{"data-source-line":"53"},"支持三种类型：图标、图片和字符",-1),N=p("pre",{style:{display:"none"}},null,-1),V={class:"vuedoc-demo "},X={class:"vuedoc-demo__inner"},O={class:"vuedoc-demo__preview"},W={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},$=g('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-type&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-col</span> <span class="hljs-attr">:span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-col</span> <span class="hljs-attr">:span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://i.loli.net/2020/12/29/5kcoKlfEpVNraPm.png&quot;</span> <span class="hljs-attr">background-color</span>=<span class="hljs-string">&quot;#fff&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-col</span> <span class="hljs-attr">:span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),B=p("h2",{id:"图片加载失败的-fallback-行为","data-source-line":"71"},[p("a",{class:"markdownIt-Anchor",href:"#图片加载失败的-fallback-行为"},"#"),r(" 图片加载失败的 fallback 行为")],-1),D=p("p",{"data-source-line":"73"},"当展示类型为图片的时候，图片加载失败的 fallback 行为",-1),J=p("pre",{style:{display:"none"}},null,-1),M={class:"vuedoc-demo "},T={class:"vuedoc-demo__inner"},Y={class:"vuedoc-demo__preview"},Z={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ss=g('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-type&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;60&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://empty&quot;</span> @<span class="hljs-attr">error</span>=<span class="hljs-string">&quot;errorHandler&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-function"><span class="hljs-title">errorHandler</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>\n    },\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),as=g('<h2 id="图片如何适应容器框" data-source-line="95"><a class="markdownIt-Anchor" href="#图片如何适应容器框">#</a> 图片如何适应容器框</h2><p data-source-line="97">当展示类型为图片的时候，使用 <code>fit</code> 属性定义图片如何适应容器框，同原生 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit">object-fit</a>。</p><pre style="display:none;"></pre>',3),ns={class:"vuedoc-demo "},ls={class:"vuedoc-demo__inner"},ts={class:"vuedoc-demo__preview"},ps={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},cs=g('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-fit&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;fit in fits&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;fit&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>{{ fit }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">rol-avatar</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">:fit</span>=<span class="hljs-string">&quot;fit&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-avatar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">fits</span>: [<span class="hljs-string">&#39;fill&#39;</span>, <span class="hljs-string">&#39;contain&#39;</span>, <span class="hljs-string">&#39;cover&#39;</span>, <span class="hljs-string">&#39;none&#39;</span>, <span class="hljs-string">&#39;scale-down&#39;</span>],\n      <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg&#39;</span>,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),es=g('<h3 id="attributes" data-source-line="120"><a class="markdownIt-Anchor" href="#attributes">#</a> Attributes</h3><table data-source-line="122"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>icon</td><td>设置头像的图标类型，参考 Icon 组件</td><td>string</td><td></td><td></td></tr><tr><td>size</td><td>设置头像的大小</td><td>number/string</td><td>number / large / medium / small</td><td>large</td></tr><tr><td>shape</td><td>设置头像的形状</td><td>string</td><td>circle / square</td><td>circle</td></tr><tr><td>background-color</td><td>设置头像的背景颜色</td><td>string</td><td>-</td><td>#b5b5b5</td></tr><tr><td>src</td><td>图片头像的资源地址</td><td>string</td><td></td><td></td></tr><tr><td>srcSet</td><td>以逗号分隔的一个或多个字符串列表表明一系列用户代理使用的可能的图像</td><td>string</td><td></td><td></td></tr><tr><td>alt</td><td>描述图像的替换文本</td><td>string</td><td></td><td></td></tr><tr><td>fit</td><td>当展示类型为图片的时候，设置图片如何适应容器框</td><td>string</td><td>fill / contain / cover / none / scale-down</td><td>cover</td></tr></tbody></table><h3 id="events" data-source-line="133"><a class="markdownIt-Anchor" href="#events">#</a> Events</h3><table data-source-line="135"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>error</td><td>图片类头像加载失败的回调， 返回 false 会关闭组件默认的 fallback 行为</td><td>(e: Event)</td></tr></tbody></table><h3 id="slot" data-source-line="139"><a class="markdownIt-Anchor" href="#slot">#</a> Slot</h3><table data-source-line="141"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义头像展示内容</td></tr></tbody></table>',6);R.render=function(s,t,c,e,r,d){const h=a("vdpv_0"),i=a("vdpv_1"),j=a("vdpv_2"),g=a("vdpv_3");return n(),l("div",E,[I,p("div",L,[p("div",S,[p("div",K,[p(h)]),p("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[p("div",P,[Q],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:t[1]||(t[1]=a=>s.toggleCode(0))},o(s.vdpv_0Height>0?"hidden":"show"),1)])]),F,G,N,p("div",V,[p("div",X,[p("div",O,[p(i)]),p("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[p("div",W,[$],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:t[2]||(t[2]=a=>s.toggleCode(1))},o(s.vdpv_1Height>0?"hidden":"show"),1)])]),B,D,J,p("div",M,[p("div",T,[p("div",Y,[p(j)]),p("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[p("div",Z,[ss],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:t[3]||(t[3]=a=>s.toggleCode(2))},o(s.vdpv_2Height>0?"hidden":"show"),1)])]),as,p("div",ns,[p("div",ls,[p("div",ts,[p(g)]),p("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[p("div",ps,[cs],512)],4),p("div",{class:"vuedoc-demo__footer",onClick:t[4]||(t[4]=a=>s.toggleCode(3))},o(s.vdpv_3Height>0?"hidden":"show"),1)])]),es])};export default R;
