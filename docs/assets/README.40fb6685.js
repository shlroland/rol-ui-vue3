import{f as n,s,r as a,o as t,c as o,w as p,b as e,u as c,g as u,h as l,t as i,a as d,i as k,j as r}from"./index.0a0bdcdf.js";var g=n({setup(){const n=s();return{open(){n.ctx.$alert("这是一段内容","标题名称",{confirmButtonText:"确定",callback:s=>{n.ctx.$message({type:"info",message:`action: ${s}`})}})}}}});const m=e("点击打开 Message Box");g.render=function(n,s,e,c,u,l){const i=a("rol-button");return t(),o(i,{type:"text",onClick:n.open},{default:p((()=>[m])),_:1},8,["onClick"])};var f=n({setup(){const n=s();return{open(){n.ctx.$confirm("此操作将永久删除该文件, 是否继续?","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((()=>{n.ctx.$message({type:"success",message:"删除成功!"})})).catch((()=>{n.ctx.$message({type:"info",message:"已取消删除"})}))}}}});const v=e("点击打开 Message Box");f.render=function(n,s,e,c,u,l){const i=a("rol-button");return t(),o(i,{type:"text",onClick:n.open},{default:p((()=>[v])),_:1},8,["onClick"])};var h=n({setup(){const n=s();return{open(){n.ctx.$prompt("请输入邮箱","提示",{confirmButtonText:"确定",cancelButtonText:"取消",inputPattern:/[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/,inputErrorMessage:"邮箱格式不正确"}).then((({value:s})=>{n.ctx.$message({type:"success",message:"你的邮箱是: "+s})})).catch((()=>{n.ctx.$message({type:"info",message:"取消输入"})}))}}}});const x=e("点击打开 Message Box");h.render=function(n,s,e,c,u,l){const i=a("rol-button");return t(),o(i,{type:"text",onClick:n.open},{default:p((()=>[x])),_:1},8,["onClick"])};var _=n({setup(){const n=s();return{open(){n.ctx.$msgbox({title:"消息",message:c("p",null,[c("span",null,"内容可以是 "),c("i",{style:"color: teal"},"VNode")]),showCancelButton:!0,confirmButtonText:"确定",cancelButtonText:"取消",beforeClose:(n,s,a)=>{"confirm"===n?(s.confirmButtonLoading=!0,s.confirmButtonText="执行中...",setTimeout((()=>{a(),setTimeout((()=>{s.confirmButtonLoading=!1}),300)}),3e3)):a()}}).then((s=>{n.ctx.$message({type:"info",message:"action: "+s})}))}}}});const b=e("点击打开 Message Box");function w(n,s){if(!document.head.querySelector("#"+s)){const a=document.createElement("style");a.textContent=n,a.type="text/css",a.id=s,document.head.appendChild(a)}}_.render=function(n,s,e,c,u,l){const i=a("rol-button");return t(),o(i,{type:"text",onClick:n.open},{default:p((()=>[b])),_:1},8,["onClick"])},w(".vuedoc {\n}\n.vuedoc-demo {\n}\n.vuedoc-demo__inner {\n  border: 1px solid #eaeefb;\n}\n.vuedoc-demo__preview {\n  padding: 20px;\n  background-color: #fff;\n}\n.vuedoc-demo__source {\n  background-color: #fafafa;\n  border-top: 1px solid #eaeefb;\n  overflow: hidden;\n  height: 0;\n  transition: all 0.2s ease-in-out;\n}\n.vuedoc-demo__sourceref {\n  overflow: hidden;\n}\n.vuedoc-demo__sourceref > pre {\n  padding: 20px 0;\n  margin: 0;\n  line-height: 1.5;\n}\n.vuedoc-demo__sourceref code {\n  background-color: inherit;\n}\n.vuedoc-demo__footer {\n  border-top: 1px solid #eaeefb;\n  height: 44px;\n  line-height: 43px;\n  box-sizing: border-box;\n  background-color: #fff;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  text-align: center;\n  margin-top: -1px;\n  color: #d3dce6;\n  cursor: pointer;\n  position: relative;\n}\n.vuedoc-demo__footer:hover {\n  color: #409eff;\n  background-color: #f9fafc;\n}\n","__vd__base__"),w("/**\n * okaidia theme for JavaScript, CSS and HTML\n * Loosely based on Monokai textmate theme by http://www.monokai.nl/\n * @author ocodia\n */\n\ncode[class*='language-'],\npre[class*='language-'] {\n  color: #f8f8f2;\n  background: none;\n  text-shadow: 0 1px rgba(0, 0, 0, 0.3);\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\n/* Code blocks */\npre[class*='language-'] {\n  padding: 1em;\n  margin: 0;\n  overflow: auto;\n}\n\n:not(pre) > code[class*='language-'],\npre[class*='language-'] {\n  background: #272822;\n}\n\n/* Inline code */\n:not(pre) > code[class*='language-'] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: #8292a2;\n}\n\n.token.punctuation {\n  color: #f8f8f2;\n}\n\n.token.namespace {\n  opacity: 0.7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #f92672;\n}\n\n.token.boolean,\n.token.number {\n  color: #ae81ff;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #a6e22e;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n  color: #f8f8f2;\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n  color: #e6db74;\n}\n\n.token.keyword {\n  color: #66d9ef;\n}\n\n.token.regex,\n.token.important {\n  color: #fd971f;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","__vd__theme__");const y=n({components:{vdpv_0:g,vdpv_1:f,vdpv_2:h,vdpv_3:_},setup(n){const s=u(),a=u(),t=u(),o=u(),p=[s,a,t,o],e=l({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px"});return{toggleCode:n=>{const s="vdpv_"+n;"0px"===e[s+"Height"]?e[s+"Height"]=((p[n].value?p[n].value.offsetHeight:0)||0)+"px":e[s+"Height"]="0px"},...i(e),vdpv_0Ref:s,vdpv_1Ref:a,vdpv_2Ref:t,vdpv_3Ref:o}}});y.matter={title:"MessageBox",description:"MessageBox component doc",wrapperClass:"messageBox-demo-wrapper",tags:["components","feedback"]};const B={class:"vuedoc  messageBox-demo-wrapper"},C=r('<h1 id="messagebox-弹框"><a href="#messagebox-%E5%BC%B9%E6%A1%86" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>MessageBox 弹框</h1><p>模拟系统的消息提示框而实现的一套模态对话框组件，用于消息提示、确认消息和提交内容。</p><h2 id="消息提示"><a href="#%E6%B6%88%E6%81%AF%E6%8F%90%E7%A4%BA" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>消息提示</h2><p>调用<code>$alert</code>方法即可打开消息提示，它模拟了系统的 <code>alert</code>，无法通过按下 ESC 或点击框外关闭。此例中接收了两个参数，<code>message</code>和<code>title</code>。值得一提的是，窗口被关闭后，它默认会返回一个<code>Promise</code>对象便于进行后续操作的处理。若不确定浏览器是否支持<code>Promise</code>，可自行引入第三方 polyfill 或像本例一样使用回调进行后续处理。</p>',4),M={class:"vuedoc-demo"},E={class:"vuedoc-demo__inner"},$={class:"vuedoc-demo__preview"},T={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},q=r('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击打开 Message Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> h<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$alert</span><span class="token punctuation">(</span><span class="token string">&#39;这是一段内容&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;标题名称&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          confirmButtonText<span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token parameter">action</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">action: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>action<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),A=r('<h2 id="确认消息"><a href="#%E7%A1%AE%E8%AE%A4%E6%B6%88%E6%81%AF" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>确认消息</h2><p>调用<code>$confirm</code>方法即可打开消息提示，它模拟了系统的 <code>confirm</code>。Message Box 组件也拥有极高的定制性，我们可以传入<code>options</code>作为第三个参数，它是一个字面量对象。<code>type</code>字段表明消息类型，可以为<code>success</code>，<code>error</code>，<code>info</code>和<code>warning</code>，无效的设置将会被忽略。注意，第二个参数<code>title</code>必须定义为<code>String</code>类型，如果是<code>Object</code>，会被理解为<code>options</code>。在这里我们用了 Promise 来处理后续响应。</p>',2),H={class:"vuedoc-demo"},I={class:"vuedoc-demo__inner"},R={class:"vuedoc-demo__preview"},P={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},S=r('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击打开 Message Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> h<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        instance<span class="token punctuation">.</span>ctx\n          <span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">&#39;此操作将永久删除该文件, 是否继续?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            confirmButtonText<span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span>\n            cancelButtonText<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token string">&#39;删除成功!&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token string">&#39;已取消删除&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),j=r('<h2 id="提交内容"><a href="#%E6%8F%90%E4%BA%A4%E5%86%85%E5%AE%B9" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>提交内容</h2><p>调用<code>$prompt</code>方法即可打开消息提示，它模拟了系统的 <code>prompt</code>。可以用<code>inputPattern</code>字段自己规定匹配模式，或者用<code>inputValidator</code>规定校验函数，可以返回<code>Boolean</code>或<code>String</code>，返回<code>false</code>或字符串时均表示校验未通过，同时返回的字符串相当于定义了<code>inputErrorMessage</code>字段。此外，可以用<code>inputPlaceholder</code>字段来定义输入框的占位符。</p>',2),L={class:"vuedoc-demo"},z={class:"vuedoc-demo__inner"},V={class:"vuedoc-demo__preview"},O={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},W=r('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击打开 Message Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> h<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        instance<span class="token punctuation">.</span>ctx\n          <span class="token punctuation">.</span><span class="token function">$prompt</span><span class="token punctuation">(</span><span class="token string">&#39;请输入邮箱&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            confirmButtonText<span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span>\n            cancelButtonText<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>\n            inputPattern<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\w!#$%&amp;&#39;*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&amp;&#39;*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            inputErrorMessage<span class="token operator">:</span> <span class="token string">&#39;邮箱格式不正确&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token string">&#39;你的邮箱是: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token string">&#39;取消输入&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),F=r('<h2 id="自定义"><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>自定义</h2><p>以上三个方法都是对<code>$msgbox</code>方法的再包装。本例直接调用<code>$msgbox</code>方法，使用了<code>showCancelButton</code>字段，用于显示取消按钮。另外可使用<code>cancelButtonClass</code>为其添加自定义样式，使用<code>cancelButtonText</code>来自定义按钮文本（Confirm 按钮也具有相同的字段，在文末的字段说明中有完整的字段列表）。此例还使用了<code>beforeClose</code>属性，它的值是一个方法，会在 MessageBox 的实例关闭前被调用，同时暂停实例的关闭。它有三个参数：<code>action</code>、实例本身和<code>done</code>方法。使用它能够在关闭前对实例进行一些操作，比如为确定按钮添加<code>loading</code>状态等；此时若需要关闭实例，可以调用<code>done</code>方法（若在<code>beforeClose</code>中没有调用<code>done</code>，则实例不会关闭）。</p>',2),N={class:"vuedoc-demo"},U={class:"vuedoc-demo__inner"},D={class:"vuedoc-demo__preview"},J={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},G=r('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击打开 Message Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> h<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        instance<span class="token punctuation">.</span>ctx\n          <span class="token punctuation">.</span><span class="token function">$msgbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;消息&#39;</span><span class="token punctuation">,</span>\n            message<span class="token operator">:</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;内容可以是 &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&#39;color: teal&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;VNode&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            showCancelButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            confirmButtonText<span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span>\n            cancelButtonText<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">beforeClose</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> msgInstance<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">===</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                msgInstance<span class="token punctuation">.</span>confirmButtonLoading <span class="token operator">=</span> <span class="token boolean">true</span>\n                msgInstance<span class="token punctuation">.</span>confirmButtonText <span class="token operator">=</span> <span class="token string">&#39;执行中...&#39;</span>\n                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                  <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    msgInstance<span class="token punctuation">.</span>confirmButtonLoading <span class="token operator">=</span> <span class="token boolean">false</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>\n              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">action</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              type<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token string">&#39;action: &#39;</span> <span class="token operator">+</span> action<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),K=r('<h2 id="全局方法"><a href="#%E5%85%A8%E5%B1%80%E6%96%B9%E6%B3%95" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>全局方法</h2><p>如果你完整引入了 rol-ui <code>app.config.globalProperties</code> 添加如下全局方法：<span class="math math-inline">msgbox, </span>alert, <span class="math math-inline">confirm 和 </span>prompt。因此在 Vue instance 中可以采用本页面中的方式调用 <code>MessageBox</code>。调用参数为：</p><ul><li><code>$msgbox(options)</code></li><li><code>$alert(message, title, options)</code> 或 <code>$alert(message, options)</code></li><li><code>$confirm(message, title, options)</code> 或 <code>$confirm(message, options)</code></li><li><code>$prompt(message, title, options)</code> 或 <code>$prompt(message, options)</code></li></ul><h3 id="单独引用"><a href="#%E5%8D%95%E7%8B%AC%E5%BC%95%E7%94%A8" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>单独引用</h3><p>如果单独引入 <code>MessageBox</code>：</p><div class="vuedoc__code"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> RolMessageBoxWrap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rol-ui&#39;</span></code></pre></div><p>那么对应于上述四个全局方法的调用方法依次为：RolMessageBoxWrap, RolMessageBoxWrap.alert, RolMessageBoxWrap.confirm 和 RolMessageBoxWrap.prompt，调用参数与全局方法相同。</p><h3 id="options"><a href="#options" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>MessageBox 标题</td><td>string</td><td>—</td><td>—</td></tr><tr><td>message</td><td>MessageBox 消息正文内容</td><td>string / VNode</td><td>—</td><td>—</td></tr><tr><td>dangerouslyUseHTMLString</td><td>是否将 message 属性作为 HTML 片段处理</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>消息类型，用于显示图标</td><td>string</td><td>success / info / warning / error</td><td>—</td></tr><tr><td>iconClass</td><td>自定义图标的类名，会覆盖 <code>type</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>MessageBox 的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>callback</td><td>若不使用 Promise，可以使用此参数指定 MessageBox 关闭后的回调</td><td>function(action, instance)，action 的值为&#39;confirm&#39;, &#39;cancel&#39;或&#39;close&#39;, instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法</td><td>—</td><td>—</td></tr><tr><td>showClose</td><td>MessageBox 是否显示右上角关闭按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>beforeClose</td><td>MessageBox 关闭前的回调，会暂停实例的关闭</td><td>function(action, instance, done)，action 的值为&#39;confirm&#39;, &#39;cancel&#39;或&#39;close&#39;；instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法；done 用于关闭 MessageBox 实例</td><td>—</td><td>—</td></tr><tr><td>distinguishCancelAndClose</td><td>是否将取消（点击取消按钮）与关闭（点击关闭按钮或遮罩层、按下 ESC 键）进行区分</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>lockScroll</td><td>是否在 MessageBox 出现时将 body 滚动锁定</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>showCancelButton</td><td>是否显示取消按钮</td><td>boolean</td><td>—</td><td>false（以 confirm 和 prompt 方式调用时为 true）</td></tr><tr><td>showConfirmButton</td><td>是否显示确定按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>cancelButtonText</td><td>取消按钮的文本内容</td><td>string</td><td>—</td><td>取消</td></tr><tr><td>confirmButtonText</td><td>确定按钮的文本内容</td><td>string</td><td>—</td><td>确定</td></tr><tr><td>cancelButtonClass</td><td>取消按钮的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>confirmButtonClass</td><td>确定按钮的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>closeOnClickModal</td><td>是否可通过点击遮罩关闭 MessageBox</td><td>boolean</td><td>—</td><td>true（以 alert 方式调用时为 false）</td></tr><tr><td>closeOnPressEscape</td><td>是否可通过按下 ESC 键关闭 MessageBox</td><td>boolean</td><td>—</td><td>true（以 alert 方式调用时为 false）</td></tr><tr><td>closeOnHashChange</td><td>是否在 hashchange 时关闭 MessageBox</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>showInput</td><td>是否显示输入框</td><td>boolean</td><td>—</td><td>false（以 prompt 方式调用时为 true）</td></tr><tr><td>inputPlaceholder</td><td>输入框的占位符</td><td>string</td><td>—</td><td>—</td></tr><tr><td>inputType</td><td>输入框的类型</td><td>string</td><td>—</td><td>text</td></tr><tr><td>inputValue</td><td>输入框的初始文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>inputPattern</td><td>输入框的校验表达式</td><td>regexp</td><td>—</td><td>—</td></tr><tr><td>inputValidator</td><td>输入框的校验函数。可以返回布尔值或字符串，若返回一个字符串, 则返回结果会被赋值给 inputErrorMessage</td><td>function</td><td>—</td><td>—</td></tr><tr><td>inputErrorMessage</td><td>校验未通过时的提示文本</td><td>string</td><td>—</td><td>输入的数据不合法!</td></tr><tr><td>center</td><td>是否居中布局</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>roundButton</td><td>是否使用圆角按钮</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>',9);y.render=function(n,s,p,e,c,u){const l=a("vdpv_0"),i=a("vdpv_1"),r=a("vdpv_2"),g=a("vdpv_3");return t(),o("div",B,[C,d("div",M,[d("div",E,[d("div",$,[d(l)]),d("div",{style:{height:n.vdpv_0Height},class:"vuedoc-demo__source"},[d("div",T,[q],512)],4),d("div",{class:"vuedoc-demo__footer",onClick:s[1]||(s[1]=s=>n.toggleCode(0))},k(n.vdpv_0Height>0?"hidden":"show"),1)])]),A,d("div",H,[d("div",I,[d("div",R,[d(i)]),d("div",{style:{height:n.vdpv_1Height},class:"vuedoc-demo__source"},[d("div",P,[S],512)],4),d("div",{class:"vuedoc-demo__footer",onClick:s[2]||(s[2]=s=>n.toggleCode(1))},k(n.vdpv_1Height>0?"hidden":"show"),1)])]),j,d("div",L,[d("div",z,[d("div",V,[d(r)]),d("div",{style:{height:n.vdpv_2Height},class:"vuedoc-demo__source"},[d("div",O,[W],512)],4),d("div",{class:"vuedoc-demo__footer",onClick:s[3]||(s[3]=s=>n.toggleCode(2))},k(n.vdpv_2Height>0?"hidden":"show"),1)])]),F,d("div",N,[d("div",U,[d("div",D,[d(g)]),d("div",{style:{height:n.vdpv_3Height},class:"vuedoc-demo__source"},[d("div",J,[G],512)],4),d("div",{class:"vuedoc-demo__footer",onClick:s[4]||(s[4]=s=>n.toggleCode(3))},k(n.vdpv_3Height>0?"hidden":"show"),1)])]),K])};export default y;
