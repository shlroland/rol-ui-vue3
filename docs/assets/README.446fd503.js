var s=Object.assign;import{g as a,r as t,o as n,c as l,a as e,F as c,w as p,f as d,h as o,t as r,i as h,j as i,b as v}from"./index.94997196.js";const u={setup:s=>({check:a(!0)})};u.render=function(s,a,e,c,p,d){const o=t("rol-switch");return n(),l(o,{modelValue:c.check,"onUpdate:modelValue":a[1]||(a[1]=s=>c.check=s),"active-color":"#10B981","inactive-color":"#EF4444"},null,8,["modelValue"])};const j={setup:s=>({check1:a(!0),check2:a(!1)})};j.render=function(s,a,p,d,o,r){const h=t("rol-switch");return n(),l(c,null,[e(h,{modelValue:d.check1,"onUpdate:modelValue":a[1]||(a[1]=s=>d.check1=s),"active-text":"停止","inactive-text":"激活"},null,8,["modelValue"]),e(h,{style:{display:"block"},modelValue:d.check2,"onUpdate:modelValue":a[2]||(a[2]=s=>d.check2=s),"active-text":"停止","inactive-text":"激活","active-color":"#10B981","inactive-color":"#EF4444"},null,8,["modelValue"])],64)};const g={setup:s=>({check:a("100")})};g.render=function(s,a,c,d,o,r){const h=t("rol-switch"),i=t("rol-tooltip");return n(),l(i,{content:"Switch value: "+d.check,placement:"top"},{default:p((()=>[e(h,{modelValue:d.check,"onUpdate:modelValue":a[1]||(a[1]=s=>d.check=s),"active-value":"100","inactive-value":"0","active-color":"#10B981","inactive-color":"#EF4444"},null,8,["modelValue"])])),_:1},8,["content"])};const m={setup:s=>({check1:a(!0),check2:a(!1)})};m.render=function(s,a,p,d,o,r){const h=t("rol-switch");return n(),l(c,null,[e(h,{modelValue:d.check1,"onUpdate:modelValue":a[1]||(a[1]=s=>d.check1=s),disabled:""},null,8,["modelValue"]),e(h,{style:{display:"block"},modelValue:d.check2,"onUpdate:modelValue":a[2]||(a[2]=s=>d.check2=s),disabled:""},null,8,["modelValue"])],64)};const k={setup:s=>({check1:a(!0),check2:a(!1)})};k.render=function(s,a,p,d,o,r){const h=t("rol-switch");return n(),l(c,null,[e(h,{modelValue:d.check1,"onUpdate:modelValue":a[1]||(a[1]=s=>d.check1=s),loading:""},null,8,["modelValue"]),e(h,{style:{display:"block"},modelValue:d.check2,"onUpdate:modelValue":a[2]||(a[2]=s=>d.check2=s),loading:""},null,8,["modelValue"])],64)};const _=d({components:{vdpv_0:u,vdpv_1:j,vdpv_2:g,vdpv_3:m,vdpv_4:k},setup(t){const n=a(),l=a(),e=a(),c=a(),p=a(),d=[n,l,e,c,p],h=o({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px",vdpv_3Height:"0px",vdpv_4Height:"0px"});return s(s({toggleCode:s=>{const a="vdpv_"+s;"0px"===h[a+"Height"]?h[a+"Height"]=((d[s].value?d[s].value.offsetHeight:0)||0)+"px":h[a+"Height"]="0px"}},r(h)),{vdpv_0Ref:n,vdpv_1Ref:l,vdpv_2Ref:e,vdpv_3Ref:c,vdpv_4Ref:p})}});_.$vd={matter:{title:"Switch",description:"Switch component doc",wrapperClass:"Checkbox-wrapper-class",tags:["components","form"]},toc:[{content:"Switch 开关框",anchor:"switch-开关框",level:1},{content:"基本用法",anchor:"基本用法",level:2},{content:"文字描述",anchor:"文字描述",level:2},{content:"扩展的 value 类型",anchor:"扩展的-value-类型",level:2},{content:"禁用状态",anchor:"禁用状态",level:2},{content:"加载中",anchor:"加载中",level:3},{content:"Attributes",anchor:"attributes",level:3},{content:"Events",anchor:"events",level:3},{content:"Methods",anchor:"methods",level:3}]};const w=_,f={class:"vuedoc  Checkbox-wrapper-class"},y=i('<h1 id="switch-开关框" data-source-line="2"><a class="markdownIt-Anchor" href="#switch-开关框">#</a> Switch 开关框</h1><p data-source-line="4">表示开关状态/两种状态之间的切换</p><h2 id="基本用法" data-source-line="6"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h2><p data-source-line="8">绑定 v-model 到一个 Boolean 类型的变量。可以使用 active-color 属性与 inactive-color 属性来设置开关的背景色。</p><pre style="display:none;"></pre>',5),q={class:"vuedoc-demo "},b={class:"vuedoc-demo__inner"},x={class:"vuedoc-demo__preview"},V={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},H=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#10B981&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#EF4444&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> {\n    <span class="hljs-keyword">const</span> check = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">return</span> {\n      check,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),C=e("h2",{id:"文字描述","data-source-line":"29"},[e("a",{class:"markdownIt-Anchor",href:"#文字描述"},"#"),v(" 文字描述")],-1),A=e("p",{"data-source-line":"31"},[v("使用"),e("code",null,"active-text"),v("属性与"),e("code",null,"inactive-text"),v("属性来设置开关的文字描述。")],-1),B=e("pre",{style:{display:"none"}},null,-1),R={class:"vuedoc-demo "},I={class:"vuedoc-demo__inner"},E={class:"vuedoc-demo__preview"},S={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},U=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check1&quot;</span> <span class="hljs-attr">active-text</span>=<span class="hljs-string">&quot;停止&quot;</span> <span class="hljs-attr">inactive-text</span>=<span class="hljs-string">&quot;激活&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span>\n    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block&quot;</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check2&quot;</span>\n    <span class="hljs-attr">active-text</span>=<span class="hljs-string">&quot;停止&quot;</span>\n    <span class="hljs-attr">inactive-text</span>=<span class="hljs-string">&quot;激活&quot;</span>\n    <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#10B981&quot;</span>\n    <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#EF4444&quot;</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> {\n    <span class="hljs-keyword">const</span> check1 = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">const</span> check2 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      check1,\n      check2,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),F=i('<h2 id="扩展的-value-类型" data-source-line="62"><a class="markdownIt-Anchor" href="#扩展的-value-类型">#</a> 扩展的 value 类型</h2><p data-source-line="64">设置<code>active-value</code>和<code>inactive-value</code>属性，接受<code>Boolean</code>, <code>String</code>或<code>Number</code>类型的值。</p><pre style="display:none;"></pre>',3),M={class:"vuedoc-demo "},N={class:"vuedoc-demo__inner"},O={class:"vuedoc-demo__preview"},$={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},z=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-tooltip</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;&#39;Switch value: &#39; + check&quot;</span> <span class="hljs-attr">placement</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check&quot;</span>\n      <span class="hljs-attr">active-value</span>=<span class="hljs-string">&quot;100&quot;</span>\n      <span class="hljs-attr">inactive-value</span>=<span class="hljs-string">&quot;0&quot;</span>\n      <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#10B981&quot;</span>\n      <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#EF4444&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">rol-tooltip</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> {\n    <span class="hljs-keyword">const</span> check = ref(<span class="hljs-string">&#39;100&#39;</span>)\n    <span class="hljs-keyword">return</span> {\n      check,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),D=e("h2",{id:"禁用状态","data-source-line":"93"},[e("a",{class:"markdownIt-Anchor",href:"#禁用状态"},"#"),v(" 禁用状态")],-1),G=e("p",{"data-source-line":"95"},[v("设置"),e("code",null,"disabled"),v("属性，接受一个"),e("code",null,"Boolean"),v("，设置"),e("code",null,"true"),v("即可禁用。")],-1),J=e("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},L={class:"vuedoc-demo__inner"},P={class:"vuedoc-demo__preview"},Q={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},T=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check1&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check2&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> {\n    <span class="hljs-keyword">const</span> check1 = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">const</span> check2 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      check1,\n      check2,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),W=e("h3",{id:"加载中","data-source-line":"119"},[e("a",{class:"markdownIt-Anchor",href:"#加载中"},"#"),v(" 加载中")],-1),X=e("p",{"data-source-line":"121"},[v("设置"),e("code",null,"loading"),v("属性，接受一个"),e("code",null,"Boolean"),v("，设置"),e("code",null,"true"),v("即加载中状态。")],-1),Y=e("pre",{style:{display:"none"}},null,-1),Z={class:"vuedoc-demo "},ss={class:"vuedoc-demo__inner"},as={class:"vuedoc-demo__preview"},ts={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},ns=i('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check1&quot;</span> <span class="hljs-attr">loading</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">rol-switch</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;check2&quot;</span> <span class="hljs-attr">loading</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rol-switch</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> {\n    <span class="hljs-keyword">const</span> check1 = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">const</span> check2 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      check1,\n      check2,\n    }\n  },\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),ls=i('<h3 id="attributes" data-source-line="145"><a class="markdownIt-Anchor" href="#attributes">#</a> Attributes</h3><table data-source-line="147"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value / v-model</td><td>绑定值，必须等于<code>active-value</code>或<code>inactive-value</code>，默认为<code>Boolean</code>类型</td><td>boolean / string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>loading</td><td>是否显示加载中</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>width</td><td>switch 的宽度（像素）</td><td>number</td><td>—</td><td>40</td></tr><tr><td>active-icon-class</td><td>switch 打开时所显示图标的类名，设置此项会忽略 <code>active-text</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>inactive-icon-class</td><td>switch 关闭时所显示图标的类名，设置此项会忽略 <code>inactive-text</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>active-text</td><td>switch 打开时的文字描述</td><td>string</td><td>—</td><td>—</td></tr><tr><td>inactive-text</td><td>switch 关闭时的文字描述</td><td>string</td><td>—</td><td>—</td></tr><tr><td>active-value</td><td>switch 打开时的值</td><td>boolean / string / number</td><td>—</td><td>true</td></tr><tr><td>inactive-value</td><td>switch 关闭时的值</td><td>boolean / string / number</td><td>—</td><td>false</td></tr><tr><td>active-color</td><td>switch 打开时的背景色</td><td>string</td><td>—</td><td>#174287</td></tr><tr><td>inactive-color</td><td>switch 关闭时的背景色</td><td>string</td><td>—</td><td>#dbdbdb</td></tr><tr><td>name</td><td>switch 对应的 name 属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>validate-event</td><td>改变 switch 状态时是否触发表单的校验</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table><h3 id="events" data-source-line="164"><a class="markdownIt-Anchor" href="#events">#</a> Events</h3><table data-source-line="166"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>switch 状态发生变化时的回调函数</td><td>新状态的值</td></tr></tbody></table><h3 id="methods" data-source-line="170"><a class="markdownIt-Anchor" href="#methods">#</a> Methods</h3><table data-source-line="172"><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 Switch 获取焦点</td><td>-</td></tr></tbody></table>',6);w.render=function(s,a,c,p,d,o){const r=t("vdpv_0"),i=t("vdpv_1"),v=t("vdpv_2"),u=t("vdpv_3"),j=t("vdpv_4");return n(),l("div",f,[y,e("div",q,[e("div",b,[e("div",x,[e(r)]),e("div",{style:{height:s.vdpv_0Height},class:"vuedoc-demo__source"},[e("div",V,[H],512)],4),e("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},h(s.vdpv_0Height>0?"hidden":"show"),1)])]),C,A,B,e("div",R,[e("div",I,[e("div",E,[e(i)]),e("div",{style:{height:s.vdpv_1Height},class:"vuedoc-demo__source"},[e("div",S,[U],512)],4),e("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},h(s.vdpv_1Height>0?"hidden":"show"),1)])]),F,e("div",M,[e("div",N,[e("div",O,[e(v)]),e("div",{style:{height:s.vdpv_2Height},class:"vuedoc-demo__source"},[e("div",$,[z],512)],4),e("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},h(s.vdpv_2Height>0?"hidden":"show"),1)])]),D,G,J,e("div",K,[e("div",L,[e("div",P,[e(u)]),e("div",{style:{height:s.vdpv_3Height},class:"vuedoc-demo__source"},[e("div",Q,[T],512)],4),e("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},h(s.vdpv_3Height>0?"hidden":"show"),1)])]),W,X,Y,e("div",Z,[e("div",ss,[e("div",as,[e(j)]),e("div",{style:{height:s.vdpv_4Height},class:"vuedoc-demo__source"},[e("div",ts,[ns],512)],4),e("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},h(s.vdpv_4Height>0?"hidden":"show"),1)])]),ls])};export default w;
