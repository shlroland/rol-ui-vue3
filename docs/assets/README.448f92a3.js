import{n,q as a,o as s,c as t,g as o,s as e,r as p,a as c,w as l,F as u,b as i,f as r,h as d,t as k,i as g,j as v}from"./index.0a0bdcdf.js";const f={class:"w-full h-96 bg-gray-200 flex justify-center items-center"};const m={render:function(o,e){const p=n("loading");return a((s(),t("div",f," 等待中 ",512)),[[p,!0]])}},h={"rol-loading-text":"拼命加载中","rol-loading-spinner":"spinner","rol-loading-background":"rgba(0, 0, 0, 0.8)",class:"w-full h-96 bg-gray-200 flex justify-center items-center"};const _={render:function(o,e){const p=n("loading");return a((s(),t("div",h," 等待中 ",512)),[[p,!0]])}};var b={setup(n,a){const s=o(!1),t=e().ctx.$loading;return{fullscreenLoading:s,openFullScreen1:()=>{s.value=!0,setTimeout((()=>{s.value=!1}),2e3)},openFullScreen2:()=>{const n=t({lock:!0,text:"Loading",spinner:"spinner",background:"rgba(0, 0, 0, 0.7)"});setTimeout((()=>{n.close()}),2e3)}}}};const y=i(" 指令方式 "),x=i(" 服务方式 ");function w(n,a){if(!document.head.querySelector("#"+a)){const s=document.createElement("style");s.textContent=n,s.type="text/css",s.id=a,document.head.appendChild(s)}}b.render=function(o,e,i,r,d,k){const g=p("rol-button"),v=n("loading");return s(),t(u,null,[a(c(g,{type:"primary",onClick:r.openFullScreen1},{default:l((()=>[y])),_:1},8,["onClick"]),[[v,r.fullscreenLoading,void 0,{fullscreen:!0}]]),c(g,{style:{"margin-left":"1.5em"},type:"primary",onClick:r.openFullScreen2},{default:l((()=>[x])),_:1},8,["onClick"])],64)},w(".vuedoc {\n}\n.vuedoc-demo {\n}\n.vuedoc-demo__inner {\n  border: 1px solid #eaeefb;\n}\n.vuedoc-demo__preview {\n  padding: 20px;\n  background-color: #fff;\n}\n.vuedoc-demo__source {\n  background-color: #fafafa;\n  border-top: 1px solid #eaeefb;\n  overflow: hidden;\n  height: 0;\n  transition: all 0.2s ease-in-out;\n}\n.vuedoc-demo__sourceref {\n  overflow: hidden;\n}\n.vuedoc-demo__sourceref > pre {\n  padding: 20px 0;\n  margin: 0;\n  line-height: 1.5;\n}\n.vuedoc-demo__sourceref code {\n  background-color: inherit;\n}\n.vuedoc-demo__footer {\n  border-top: 1px solid #eaeefb;\n  height: 44px;\n  line-height: 43px;\n  box-sizing: border-box;\n  background-color: #fff;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  text-align: center;\n  margin-top: -1px;\n  color: #d3dce6;\n  cursor: pointer;\n  position: relative;\n}\n.vuedoc-demo__footer:hover {\n  color: #409eff;\n  background-color: #f9fafc;\n}\n","__vd__base__"),w("/**\n * okaidia theme for JavaScript, CSS and HTML\n * Loosely based on Monokai textmate theme by http://www.monokai.nl/\n * @author ocodia\n */\n\ncode[class*='language-'],\npre[class*='language-'] {\n  color: #f8f8f2;\n  background: none;\n  text-shadow: 0 1px rgba(0, 0, 0, 0.3);\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\n/* Code blocks */\npre[class*='language-'] {\n  padding: 1em;\n  margin: 0;\n  overflow: auto;\n}\n\n:not(pre) > code[class*='language-'],\npre[class*='language-'] {\n  background: #272822;\n}\n\n/* Inline code */\n:not(pre) > code[class*='language-'] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: #8292a2;\n}\n\n.token.punctuation {\n  color: #f8f8f2;\n}\n\n.token.namespace {\n  opacity: 0.7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #f92672;\n}\n\n.token.boolean,\n.token.number {\n  color: #ae81ff;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #a6e22e;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n  color: #f8f8f2;\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n  color: #e6db74;\n}\n\n.token.keyword {\n  color: #66d9ef;\n}\n\n.token.regex,\n.token.important {\n  color: #fd971f;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","__vd__theme__");const q=r({components:{vdpv_0:m,vdpv_1:_,vdpv_2:b},setup(n){const a=o(),s=o(),t=o(),e=[a,s,t],p=d({vdpv_0Height:"0px",vdpv_1Height:"0px",vdpv_2Height:"0px"});return{toggleCode:n=>{const a="vdpv_"+n;"0px"===p[a+"Height"]?p[a+"Height"]=((e[n].value?e[n].value.offsetHeight:0)||0)+"px":p[a+"Height"]="0px"},...k(p),vdpv_0Ref:a,vdpv_1Ref:s,vdpv_2Ref:t}}});q.matter={title:"Loading",description:"Loading component doc",wrapperClass:"loading-demo-wrapper",tags:["components","feedback"]};const L={class:"vuedoc  loading-demo-wrapper"},C=v('<h1 id="loading-加载"><a href="#loading-%E5%8A%A0%E8%BD%BD" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Loading 加载</h1><p>加载数据时显示动效。</p><h2 id="区域加载"><a href="#%E5%8C%BA%E5%9F%9F%E5%8A%A0%E8%BD%BD" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>区域加载</h2><p>在容器中加载数据时显示。</p>',4),E={class:"vuedoc-demo"},j={class:"vuedoc-demo__inner"},S={class:"vuedoc-demo__preview"},A={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},H=v('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full h-96 bg-gray-200 flex justify-center items-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    等待中\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),F=v('<h2 id="自定义"><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>自定义</h2><p>可自定义加载文案、图标和背景色。</p><p>在绑定了<code>v-loading</code>指令的元素上添加<code>rol-loading-text</code>属性，其值会被渲染为加载文案，并显示在加载图标的下方。类似地，<code>rol-loading-spinner</code>和<code>rol-loading-background</code>属性分别用来设定图标类名和背景色值。</p>',3),R={class:"vuedoc-demo"},B={class:"vuedoc-demo__inner"},D={class:"vuedoc-demo__preview"},I={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},M=v('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n    <span class="token attr-name">v-loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">rol-loading-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>拼命加载中<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">rol-loading-spinner</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>spinner<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">rol-loading-background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rgba(0, 0, 0, 0.8)<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full h-96 bg-gray-200 flex justify-center items-center<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n    等待中\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),z=c("h2",{id:"整页加载"},[c("a",{href:"#%E6%95%B4%E9%A1%B5%E5%8A%A0%E8%BD%BD","aria-hidden":"true",tabindex:"-1"},[c("span",{class:"icon icon-link"})]),i("整页加载")],-1),T=c("p",null,"页面数据加载时显示。",-1),W=c("p",null,[i("当使用指令方式时，全屏遮罩需要添加"),c("code",null,"fullscreen"),i("修饰符（遮罩会插入至 body 上）。")],-1),$={class:"vuedoc-demo"},O={class:"vuedoc-demo__inner"},J={class:"vuedoc-demo__preview"},U={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},G=v('<div class="vuedoc__code"><pre class="language-markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>openFullScreen1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-loading.fullscreen</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fullscreenLoading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    指令方式\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rol-button</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">=&quot;</span><span class="token attr-value"><span class="token property">margin-left</span><span class="token punctuation">:</span> 1.5em</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>openFullScreen2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    服务方式\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rol-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fullscreenLoading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> $loading <span class="token operator">=</span> instance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>$loading\n\n    <span class="token keyword">const</span> <span class="token function-variable function">openFullScreen1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      fullscreenLoading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        fullscreenLoading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">openFullScreen2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">$loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        lock<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        text<span class="token operator">:</span> <span class="token string">&#39;Loading&#39;</span><span class="token punctuation">,</span>\n        spinner<span class="token operator">:</span> <span class="token string">&#39;spinner&#39;</span><span class="token punctuation">,</span>\n        background<span class="token operator">:</span> <span class="token string">&#39;rgba(0, 0, 0, 0.7)&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        loading<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      fullscreenLoading<span class="token punctuation">,</span>\n      openFullScreen1<span class="token punctuation">,</span>\n      openFullScreen2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></div>',1),K=v('<h2 id="服务"><a href="#%E6%9C%8D%E5%8A%A1" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>服务</h2><p>Loading 还可以以服务的方式调用。引入 Loading 服务：</p><div class="vuedoc__code"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> RolLoadingWrap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rol-ui&#39;</span></code></pre></div><p>在需要调用时：</p><div class="vuedoc__code"><pre class="language-javascript"><code class="language-javascript">RolLoadingWrap<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span></code></pre></div><p>其中 <code>options</code> 参数为 Loading 的配置项，具体见下表。<code>LoadingService</code> 会返回一个 Loading 实例，可通过调用该实例的 <code>close</code> 方法来关闭它：</p><div class="vuedoc__code"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">let</span> loadingInstance <span class="token operator">=</span> RolLoadingWrap<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 以服务的方式调用的 Loading 需要异步关闭</span>\n  loadingInstance<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div><p>需要注意的是，以服务的方式调用的全屏 Loading 是单例的：若在前一个全屏 Loading 关闭前再次调用全屏 Loading，并不会创建一个新的 Loading 实例，而是返回现有全屏 Loading 的实例：</p><div class="vuedoc__code"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">let</span> loadingInstance1 <span class="token operator">=</span> RolLoadingWrap<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fullscreen<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> loadingInstance2 <span class="token operator">=</span> RolLoadingWrap<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fullscreen<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>loadingInstance1 <span class="token operator">===</span> loadingInstance2<span class="token punctuation">)</span></code></pre></div><p>此时调用它们中任意一个的 <code>close</code> 方法都能关闭这个全屏 Loading。</p><h3 id="options"><a href="#options" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>Loading 需要覆盖的 DOM 节点。可传入一个 DOM 对象或字符串；若传入字符串，则会将其作为参数传入 <code>document.querySelector</code>以获取到对应 DOM 节点</td><td>object/string</td><td>—</td><td>document.body</td></tr><tr><td>body</td><td>同 <code>v-loading</code> 指令中的 <code>body</code> 修饰符</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>fullscreen</td><td>同 <code>v-loading</code> 指令中的 <code>fullscreen</code> 修饰符</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>text</td><td>显示在加载图标下方的加载文案</td><td>string</td><td>—</td><td>—</td></tr><tr><td>spinner</td><td>自定义加载图标类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>background</td><td>遮罩背景色</td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>Loading 的自定义类名</td><td>string</td><td>—</td><td>—</td></tr></tbody></table>',12);q.render=function(n,a,o,e,l,u){const i=p("vdpv_0"),r=p("vdpv_1"),d=p("vdpv_2");return s(),t("div",L,[C,c("div",E,[c("div",j,[c("div",S,[c(i)]),c("div",{style:{height:n.vdpv_0Height},class:"vuedoc-demo__source"},[c("div",A,[H],512)],4),c("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>n.toggleCode(0))},g(n.vdpv_0Height>0?"hidden":"show"),1)])]),F,c("div",R,[c("div",B,[c("div",D,[c(r)]),c("div",{style:{height:n.vdpv_1Height},class:"vuedoc-demo__source"},[c("div",I,[M],512)],4),c("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>n.toggleCode(1))},g(n.vdpv_1Height>0?"hidden":"show"),1)])]),z,T,W,c("div",$,[c("div",O,[c("div",J,[c(d)]),c("div",{style:{height:n.vdpv_2Height},class:"vuedoc-demo__source"},[c("div",U,[G],512)],4),c("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>n.toggleCode(2))},g(n.vdpv_2Height>0?"hidden":"show"),1)])]),K])};export default q;
